{
	"info": {
		"_postman_id": "dbe1aa4e-61fe-4d95-9945-882d5b0a2c09",
		"name": "FleetDM Full API Collection v4.70.0",
		"description": "Comprehensive Postman collection for FleetDM v4.70.0, grouped by API documentation sections. Each endpoint is included with example requests, variables, and descriptions.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29095443"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse JSON response and store token in environment variable",
									"let response = pm.response.json();",
									"",
									"// Adjust \".token\" according to your API's actual JSON response structure",
									"pm.environment.set(\"token\", response.token);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"2020-11-13T22:57:12Z\",\n    \"updated_at\": \"2020-11-13T22:57:12Z\",\n    \"id\": 1,\n    \"name\": \"Jane Doe\",\n    \"email\": \"[email protected]\",\n    \"enabled\": true,\n    \"force_password_reset\": false,\n    \"gravatar_url\": \"\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"global_role\": \"admin\",\n    \"teams\": []\n  },\n  \"token\": \"{your token}\"\n}"
						},
						{
							"name": "Authentication failed (401)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Authentication failed\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"Authentication failed\"\n    }\n  ],\n  \"uuid\": \"1272014b-902b-4b36-bcdb-75fde5eac1fc\"\n}"
						},
						{
							"name": "MFA Required (202)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"We sent an email to you. Please click the magic link in the email to sign in.\"\n}"
						},
						{
							"name": "Too many requests (429)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"limit exceeded, retry after: Ns\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"limit exceeded, retry after: Ns\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Log out",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/forgot_password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"forgot_password"
							]
						}
					},
					"response": [
						{
							"name": "Internal Server Error (500)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/forgot_password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"forgot_password"
									]
								}
							},
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"message\": \"Cannot send password reset. SMTP or SES Is not configured.\",\n    \"errors\": [\n        {\n            \"name\": \"base\",\n            \"reason\": \"Cannot send password reset. SMTP or SES Is not configured.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Change password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"old_password\": \"{{old_password}}\",\n  \"new_password\": \"{{new_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/change_password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"change_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"new_password\": \"{{new_password}}\",\n  \"new_password_confirmation\": \"{{new_password_confirmation}}\",\n  \"password_reset_token\": \"{{password_reset_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/reset_password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"reset_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Perform required password reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"new_password\": \"{{new_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/perform_required_password_reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"perform_required_password_reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO config",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/sso",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"sso"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/sso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"sso"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"settings\": {\n        \"idp_name\": \"IDP Vendor 1\",\n        \"idp_image_url\": \"\",\n        \"sso_enabled\": false\n    }\n}"
						}
					]
				},
				{
					"name": "Initiate SSO",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"relay_url\": \"/hosts/manage\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/sso",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"sso"
							]
						}
					},
					"response": []
				},
				{
					"name": "SSO callback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"SAMLResponse\": \"<SAML response from IdP>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/sso/callback",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"sso",
								"callback"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for managing authentication, passwords, and SSO.\n\n[https://fleetdm.com/docs/rest-api/rest-api#authentication](https://fleetdm.com/docs/rest-api/rest-api#authentication)"
		},
		{
			"name": "Activities",
			"item": [
				{
					"name": "List activities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"activities"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "{{order_key}}",
									"description": "What to order results by. Can be any column in the activities table.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "{{order_direction}}",
									"description": "The direction of the order given the order key. Options: 'asc', 'desc'. Requires order_key.",
									"disabled": true
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"activities\": [\n    {\n      \"created_at\": \"2023-07-27T14:35:08Z\",\n      \"id\": 25,\n      \"actor_full_name\": \"Anna Chao\",\n      \"actor_id\": 3,\n      \"actor_gravatar\": \"\",\n      \"actor_email\": \"\",\n      \"type\": \"installed_software\",\n      \"fleet_initiated\": false,\n      \"details\": {\n        \"status\": \"installed\",\n        \"host_id\": 1272,\n        \"host_display_name\": \"MacBook Pro\",\n        \"policy_id\": null,\n        \"policy_name\": null,\n        \"install_uuid\": \"23c18ea1-8cd7-4af4-a1d8-f2666993a66b\",\n        \"self_service\": false,\n        \"software_title\": \"zoom.us.app\",\n        \"software_package\": \"ZoomInstallerIT.pkg\"\n        }\n    },\n    {\n      \"created_at\": \"2021-07-29T14:40:27Z\",\n      \"id\": 21,\n      \"actor_full_name\": \"name\",\n      \"actor_id\": 1,\n      \"actor_gravatar\": \"\",\n      \"actor_email\": \"[email protected]\",\n      \"type\": \"created_team\",\n      \"fleet_initiated\": false,\n      \"details\": {\n        \"team_id\": 2,\n        \"team_name\": \"Apples\"\n      }\n    },\n    {\n      \"created_at\": \"2023-07-27T14:35:08Z\",\n      \"id\": 25,\n      \"type\": \"installed_software\",\n      \"fleet_initiated\": true,\n      \"details\": {\n        \"status\": \"installed\",\n        \"host_id\": 1272,\n        \"host_display_name\": \"MacBook Pro\",\n        \"policy_id\": 24,\n        \"policy_name\": \"[Install software] Zoom\",\n        \"install_uuid\": \"077970ab-0ed6-4573-9cdc-ca9ef9015283\",\n        \"self_service\": false,\n        \"software_title\": \"zoom.us.app\",\n        \"software_package\": \"ZoomInstallerIT.pkg\"\n        }\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				}
			],
			"description": "Endpoints for viewing activities that have been performed in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#activities](https://fleetdm.com/docs/rest-api/rest-api#activities)"
		},
		{
			"name": "File carving",
			"item": [
				{
					"name": "List carves",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/carves",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"carves"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "{{order_key}}",
									"description": "What to order results by. Can be any field listed in the results array.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "{{order_direction}}",
									"description": "The direction of the order given the order key.\nValid options: 'asc', 'desc'. Requires order_key.",
									"disabled": true
								},
								{
									"key": "after",
									"value": "{{after}}",
									"description": "The value to get results after. Needs order_key defined.",
									"disabled": true
								},
								{
									"key": "expired",
									"value": "{{expired}}",
									"description": "Include expired carves (default: false)",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"carves\": [\n    {\n      \"id\": 1,\n      \"created_at\": \"2021-02-23T22:52:01Z\",\n      \"host_id\": 7,\n      \"name\": \"macbook-pro.local-2021-02-23T22:52:01Z-fleet_distributed_query_30\",\n      \"block_count\": 1,\n      \"block_size\": 2000000,\n      \"carve_size\": 2048,\n      \"carve_id\": \"c6958b5f-4c10-4dc8-bc10-60aad5b20dc8\",\n      \"request_id\": \"fleet_distributed_query_30\",\n      \"session_id\": \"065a1dc3-40ad-441c-afff-80c2ad7dac28\",\n      \"expired\": false,\n      \"max_block\": 0\n    },\n    {\n      \"id\": 2,\n      \"created_at\": \"2021-02-23T22:53:03Z\",\n      \"host_id\": 7,\n      \"name\": \"macbook-pro.local-2021-02-23T22:53:03Z-fleet_distributed_query_31\",\n      \"block_count\": 2,\n      \"block_size\": 2000000,\n      \"carve_size\": 3400704,\n      \"carve_id\": \"2b9170b9-4e11-4569-a97c-2f18d18bec7a\",\n      \"request_id\": \"fleet_distributed_query_31\",\n      \"session_id\": \"f73922ed-40a4-4e98-a50a-ccda9d3eb755\",\n      \"expired\": false,\n      \"max_block\": 1,\n      \"error\": \"S3 multipart carve upload: EntityTooSmall: Your proposed upload is smaller than the minimum allowed object size\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get carve",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/carves/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"carves",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"carve\": {\n    \"id\": 1,\n    \"created_at\": \"2021-02-23T22:52:01Z\",\n    \"host_id\": 7,\n    \"name\": \"macbook-pro.local-2021-02-23T22:52:01Z-fleet_distributed_query_30\",\n    \"block_count\": 1,\n    \"block_size\": 2000000,\n    \"carve_size\": 2048,\n    \"carve_id\": \"c6958b5f-4c10-4dc8-bc10-60aad5b20dc8\",\n    \"request_id\": \"fleet_distributed_query_30\",\n    \"session_id\": \"065a1dc3-40ad-441c-afff-80c2ad7dac28\",\n    \"expired\": false,\n    \"max_block\": 0\n  }\n}"
						}
					]
				},
				{
					"name": "Get carve block",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/carves/:id/block/:block_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"carves",
								":id",
								"block",
								":block_id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "block_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"data\": \"aG9zdHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...\"\n}"
						}
					]
				}
			],
			"description": "Endpoints for osquery file carving operations.\n\n[https://fleetdm.com/docs/rest-api/rest-api#file-carving](https://fleetdm.com/docs/rest-api/rest-api#file-carving)"
		},
		{
			"name": "Fleet configuration",
			"item": [
				{
					"name": "Get certificate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/config/certificate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"config",
								"certificate"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"certificate_chain\": \"<certificate_chain>\"\n}"
						}
					]
				},
				{
					"name": "Get configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"config"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"org_info\": {\n    \"org_name\": \"fleet\",\n    \"org_logo_url\": \"\",\n    \"contact_url\": \"https://fleetdm.com/company/contact\"\n  },\n  \"server_settings\": {\n    \"server_url\": \"https://instance.fleet.com\",\n    \"enable_analytics\": true,\n    \"live_query_disabled\": false,\n    \"query_reports_disabled\": false,\n    \"ai_features_disabled\": false\n  },\n  \"smtp_settings\": {\n    \"enable_smtp\": false,\n    \"configured\": false,\n    \"sender_address\": \"\",\n    \"server\": \"\",\n    \"port\": 587,\n    \"authentication_type\": \"authtype_username_password\",\n    \"user_name\": \"\",\n    \"password\": \"********\",\n    \"enable_ssl_tls\": true,\n    \"authentication_method\": \"authmethod_plain\",\n    \"domain\": \"\",\n    \"verify_ssl_certs\": true,\n    \"enable_start_tls\": true\n  },\n  \"sso_settings\": {\n    \"entity_id\": \"\",\n    \"issuer_uri\": \"\",\n    \"idp_image_url\": \"\",\n    \"metadata\": \"\",\n    \"metadata_url\": \"\",\n    \"idp_name\": \"\",\n    \"enable_sso\": false,\n    \"enable_sso_idp_login\": false,\n    \"enable_jit_provisioning\": false\n  },\n  \"conditional_access\": {\n    \"microsoft_entra_tenant_id\": \"<TENANT ID>\",\n    \"microsoft_entra_connection_configured\": true\n  },\n  \"host_expiry_settings\": {\n    \"host_expiry_enabled\": false,\n    \"host_expiry_window\": 0\n  },\n  \"activity_expiry_settings\": {\n    \"activity_expiry_enabled\": false,\n    \"activity_expiry_window\": 0\n  },\n  \"features\": {\n    \"enable_host_users\": true,\n    \"enable_software_inventory\": true,\n    \"additional_queries\": null\n  },\n  \"mdm\": {\n    \"android_enabled_and_configured\": true,\n    \"windows_enabled_and_configured\": true,\n    \"enable_disk_encryption\": true,\n    \"macos_updates\": {\n      \"minimum_version\": \"12.3.1\",\n      \"deadline\": \"2022-01-01\"\n    },\n    \"ios_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"ipados_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"windows_updates\": {\n      \"deadline_days\": 5,\n      \"grace_period_days\": 1\n    },\n    \"macos_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile1.mobileconfig\",\n          \"labels\": [\"Label 1\", \"Label 2\"]\n        }\n      ]\n    },\n    \"windows_settings\": {\n      \"custom_settings\": [\n        {\n         \"path\": \"path/to/profile2.xml\",\n         \"labels\": [\"Label 3\", \"Label 4\"]\n        }\n      ],\n    },\n    \"scripts\": [\"path/to/script.sh\"],\n    \"end_user_authentication\": {\n      \"entity_id\": \"\",\n      \"metadata\": \"\",\n      \"metadata_url\": \"\",\n      \"idp_name\": \"\"\n    },\n    \"macos_migration\": {\n      \"enable\": false,\n      \"mode\": \"voluntary\",\n      \"webhook_url\": \"https://webhook.example.com\"\n    },\n    \"macos_setup\": {\n      \"bootstrap_package\": \"\",\n      \"enable_end_user_authentication\": false,\n      \"macos_setup_assistant\": \"path/to/config.json\",\n      \"enable_release_device_manually\": false,\n      \"manual_agent_install\": false\n    },\n    \"client_url\": \"https://instance.fleet.com\"\n  },\n  \"agent_options\": {\n    \"spec\": {\n      \"config\": {\n        \"options\": {\n          \"pack_delimiter\": \"/\",\n          \"logger_tls_period\": 10,\n          \"distributed_plugin\": \"tls\",\n          \"disable_distributed\": false,\n          \"logger_tls_endpoint\": \"/api/v1/osquery/log\",\n          \"distributed_interval\": 10,\n          \"distributed_tls_max_attempts\": 3\n        },\n        \"decorators\": {\n          \"load\": [\n            \"SELECT uuid AS host_uuid FROM system_info;\",\n            \"SELECT hostname AS hostname FROM system_info\"\n          ]\n        }\n      },\n      \"overrides\": {},\n      \"command_line_flags\": {}\n    }\n  },\n  \"license\": {\n    \"tier\": \"premium\",\n    \"organization\": \"fleet\",\n    \"device_count\": 500000,\n    \"managed_cloud\": false,\n    \"expiration\": \"2031-10-16T00:00:00Z\",\n    \"note\": \"\"\n  },\n  \"logging\": {\n    \"debug\": false,\n    \"json\": false,\n    \"result\": {\n      \"plugin\": \"firehose\",\n      \"config\": {\n        \"region\": \"us-east-1\",\n        \"status_stream\": \"\",\n        \"result_stream\": \"result-topic\"\n      }\n    },\n    \"status\": {\n      \"plugin\": \"filesystem\",\n      \"config\": {\n        \"status_log_file\": \"foo_status\",\n        \"result_log_file\": \"\",\n        \"enable_log_rotation\": false,\n        \"enable_log_compression\": false\n      }\n    }\n  },\n  \"vulnerability_settings\": {\n    \"databases_path\": \"\"\n  },\n  \"gitops\": {\n    \"gitops_mode_enabled\": false,\n    \"repository_url\": \"\",\n  },\n  \"webhook_settings\": {\n    \"host_status_webhook\": {\n      \"enable_host_status_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"host_percentage\": 5,\n      \"days_count\": 7\n    },\n    \"failing_policies_webhook\":{\n      \"enable_failing_policies_webhook\":true,\n      \"destination_url\": \"https://server.com\",\n      \"policy_ids\": [1, 2, 3],\n      \"host_batch_size\": 1000\n    },\n    \"vulnerabilities_webhook\":{\n      \"enable_vulnerabilities_webhook\":true,\n      \"destination_url\": \"https://server.com\",\n      \"host_batch_size\": 1000\n    },\n    \"activities_webhook\":{\n      \"enable_activities_webhook\":true,\n      \"destination_url\": \"https://server.com\"\n    }\n  },\n  \"integrations\": {\n    \"google_calendar\": [\n      {\n        \"domain\": \"example.com\",\n        \"api_key_json\": {\n           \"type\": \"service_account\",\n           \"project_id\": \"fleet-in-your-calendar\",\n           \"private_key_id\": \"<private key id>\",\n           \"private_key\": \"-----BEGIN PRIVATE KEY-----\\n<private key>\\n-----END PRIVATE KEY-----\\n\",\n           \"client_email\": \"fleet-calendar-events@fleet-in-your-calendar.iam.gserviceaccount.com\",\n           \"client_id\": \"<client id>\",\n           \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n           \"token_uri\": \"https://oauth2.googleapis.com/token\",\n           \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n           \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/fleet-calendar-events%40fleet-in-your-calendar.iam.gserviceaccount.com\",\n           \"universe_domain\": \"googleapis.com\"\n         }\n      }\n    ],\n    \"jira\": [],\n    \"digicert\": [\n      {\n        \"name\": \"DIGICERT_WIFI\",\n        \"url\": \"https://one.digicert.com\",\n        \"api_token\": \"********\",\n        \"profile_id\": \"7ed77396-9186-4bfa-9fa7-63dddc46b8a3\",\n        \"certificate_common_name\": \"[email protected]\",\n        \"certificate_user_principal_names\": [\n          \"[email protected]\",\n        ],\n        \"certificate_seat_id\": \"[email protected]\"\n      }\n    ],\n    \"ndes_scep_proxy\": {\n      \"admin_url\": \"https://example.com/certsrv/mscep_admin/\",\n      \"password\": \"********\",\n      \"url\": \"https://example.com/certsrv/mscep/mscep.dll\",\n      \"username\": \"[email protected]\"\n    },\n    \"custom_scep_proxy\": [\n      {\n        \"name\": \"SCEP_WIFI\",\n        \"url\": \"https://example.com/scep\",\n        \"challenge\": \"********\",\n      },\n      {\n        \"name\": \"SCEP_VPN\",\n        \"url\": \"https://example.com/scep\",\n        \"challenge\": \"********\",\n      }\n    ],\n    \"zendesk\": []\n  },\n  \"logging\": {\n    \"debug\": false,\n    \"json\": false,\n    \"result\": {\n        \"plugin\": \"filesystem\",\n        \"config\": {\n          \"status_log_file\": \"/var/folders/xh/bxm1d2615tv3vrg4zrxq540h0000gn/T/osquery_status\",\n          \"result_log_file\": \"/var/folders/xh/bxm1d2615tv3vrg4zrxq540h0000gn/T/osquery_result\",\n          \"enable_log_rotation\": false,\n          \"enable_log_compression\": false\n        }\n      },\n    \"status\": {\n      \"plugin\": \"filesystem\",\n      \"config\": {\n        \"status_log_file\": \"/var/folders/xh/bxm1d2615tv3vrg4zrxq540h0000gn/T/osquery_status\",\n        \"result_log_file\": \"/var/folders/xh/bxm1d2615tv3vrg4zrxq540h0000gn/T/osquery_result\",\n        \"enable_log_rotation\": false,\n        \"enable_log_compression\": false\n      }\n    }\n  },\n  \"update_interval\": {\n    \"osquery_detail\": 3600000000000,\n    \"osquery_policy\": 3600000000000\n  },\n  \"vulnerabilities\": {\n    \"cpe_database_url\": \"\",\n    \"disable_schedule\": false,\n    \"cve_feed_prefix_url\": \"\",\n    \"databases_path\": \"\",\n    \"disable_data_sync\": false,\n    \"periodicity\": 3600000000000,\n    \"recent_vulnerability_max_age\": 2592000000000000\n  }\n}"
						}
					]
				},
				{
					"name": "Modify configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"org_info\": {\n    \"org_name\": \"Fleet Device Management\",\n    \"org_logo_url\": \"https://fleetdm.com/logo.png\",\n    \"org_logo_url_light_background\": \"https://fleetdm.com/logo-light.png\",\n    \"contact_url\": \"https://fleetdm.com/company/contact\"\n  },\n  \"server_settings\": {\n    \"server_url\": \"https://instance.fleet.com\",\n    \"enable_analytics\": true,\n    \"live_query_disabled\": false,\n    \"query_reports_disabled\": false,\n    \"ai_features_disabled\": false\n  },\n  \"smtp_settings\": {\n    \"enable_smtp\": true,\n    \"configured\": true,\n    \"sender_address\": \"\",\n    \"server\": \"localhost\",\n    \"port\": 1025,\n    \"authentication_type\": \"authtype_username_none\",\n    \"user_name\": \"\",\n    \"password\": \"********\",\n    \"enable_ssl_tls\": true,\n    \"authentication_method\": \"authmethod_plain\",\n    \"domain\": \"\",\n    \"verify_ssl_certs\": true,\n    \"enable_start_tls\": true\n  },\n  \"sso_settings\": {\n    \"entity_id\": \"\",\n    \"issuer_uri\": \"\",\n    \"idp_image_url\": \"\",\n    \"metadata\": \"\",\n    \"metadata_url\": \"\",\n    \"idp_name\": \"\",\n    \"enable_sso\": false,\n    \"enable_sso_idp_login\": false,\n    \"enable_jit_provisioning\": false\n  },\n  \"conditional_access\": {\n    \"microsoft_entra_tenant_id\": \"<TENANT ID>\",\n    \"microsoft_entra_connection_configured\": true\n  },\n  \"host_expiry_settings\": {\n    \"host_expiry_enabled\": false,\n    \"host_expiry_window\": 0\n  },\n  \"activity_expiry_settings\": {\n    \"activity_expiry_enabled\": false,\n    \"activity_expiry_window\": 0\n  },\n  \"features\": {\n    \"enable_host_users\": true,\n    \"enable_software_inventory\": true,\n    \"additional_queries\": null\n  },\n  \"license\": {\n    \"tier\": \"free\",\n    \"expiration\": \"0001-01-01T00:00:00Z\"\n  },\n  \"mdm\": {\n    \"enabled_and_configured\": false,\n    \"android_enabled_and_configured\": false,\n    \"windows_enabled_and_configured\": false,\n    \"enable_disk_encryption\": true,\n    \"macos_updates\": {\n      \"minimum_version\": \"12.3.1\",\n      \"deadline\": \"2022-01-01\"\n    },\n    \"ios_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"ipados_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"windows_updates\": {\n      \"deadline_days\": 5,\n      \"grace_period_days\": 1\n    },\n    \"macos_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile1.mobileconfig\",\n          \"labels_exclude_any\": [\"Label 1\", \"Label 2\"]\n        },\n        {\n          \"path\": \"path/to/profile2.json\",\n          \"labels_include_all\": [\"Label 3\", \"Label 4\"]\n        },\n          {\n          \"path\": \"path/to/profile3.json\",\n          \"labels_include_any\": [\"Label 5\", \"Label 6\"]\n        }\n      ]\n    },\n    \"windows_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile3.xml\",\n          \"labels_exclude_any\": [\"Label 1\", \"Label 2\"]\n        }\n      ]\n    },\n    \"end_user_authentication\": {\n      \"entity_id\": \"\",\n      \"metadata\": \"\",\n      \"metadata_url\": \"\",\n      \"idp_name\": \"\"\n    },\n    \"macos_migration\": {\n      \"enable\": false,\n      \"mode\": \"voluntary\",\n      \"webhook_url\": \"https://webhook.example.com\"\n    },\n    \"macos_setup\": {\n      \"bootstrap_package\": \"\",\n      \"enable_end_user_authentication\": false,\n      \"macos_setup_assistant\": \"path/to/config.json\"\n    },\n    \"apple_server_url\": \"https://instance.fleet.com\"\n  },\n  \"agent_options\": {\n    \"config\": {\n      \"options\": {\n        \"pack_delimiter\": \"/\",\n        \"logger_tls_period\": 10,\n        \"distributed_plugin\": \"tls\",\n        \"disable_distributed\": false,\n        \"logger_tls_endpoint\": \"/api/v1/osquery/log\",\n        \"distributed_interval\": 10,\n        \"distributed_tls_max_attempts\": 3\n      },\n      \"decorators\": {\n        \"load\": [\n          \"SELECT uuid AS host_uuid FROM system_info;\",\n          \"SELECT hostname AS hostname FROM system_info;\"\n        ]\n      }\n    },\n    \"overrides\": {},\n    \"command_line_flags\": {}\n  },\n  \"vulnerability_settings\": {\n    \"databases_path\": \"\"\n  },\n  \"fleet_desktop\": {\n    \"transparency_url\": \"https://fleetdm.com/better\"\n  },\n  \"gitops\": {\n    \"gitops_mode_enabled\": false,\n    \"repository_url\": \"\"\n  },\n  \"webhook_settings\": {\n    \"host_status_webhook\": {\n      \"enable_host_status_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"host_percentage\": 5,\n      \"days_count\": 7\n    },\n    \"failing_policies_webhook\":{\n      \"enable_failing_policies_webhook\":true,\n      \"destination_url\": \"https://server.com\",\n      \"policy_ids\": [1, 2, 3],\n      \"host_batch_size\": 1000\n    },\n    \"vulnerabilities_webhook\":{\n      \"enable_vulnerabilities_webhook\":true,\n      \"destination_url\": \"https://server.com\",\n      \"host_batch_size\": 1000\n    },\n    \"activities_webhook\":{\n      \"enable_activities_webhook\":true,\n      \"destination_url\": \"https://server.com\"\n    }\n  },\n  \"integrations\": {\n    \"google_calendar\": [\n      {\n        \"domain\": \"\",\n        \"api_key_json\": null\n      }\n    ],\n    \"jira\": [\n      {\n        \"url\": \"https://jiraserver.com\",\n        \"username\": \"some_user\",\n        \"password\": \"sec4et!\",\n        \"project_key\": \"jira_project\",\n        \"enable_software_vulnerabilities\": false\n      }\n    ],\n    \"ndes_scep_proxy\": null,\n    \"zendesk\": []\n  },\n  \"logging\": {\n      \"debug\": false,\n      \"json\": false,\n      \"result\": {\n          \"plugin\": \"firehose\",\n          \"config\": {\n            \"region\": \"us-east-1\",\n            \"status_stream\": \"\",\n            \"result_stream\": \"result-topic\"\n          }\n      },\n      \"status\": {\n          \"plugin\": \"filesystem\",\n          \"config\": {\n            \"status_log_file\": \"foo_status\",\n            \"result_log_file\": \"\",\n            \"enable_log_rotation\": false,\n            \"enable_log_compression\": false\n          }\n      }\n  },\n  \"scripts\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"config"
							],
							"query": [
								{
									"key": "force",
									"value": "false",
									"description": "Whether to force-apply the agent options even if there are validation errors.",
									"disabled": true
								},
								{
									"key": "dry_run",
									"value": "false",
									"description": "Whether to validate the configuration and return any validation errors without applying changes.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"org_info\": {\n    \"org_name\": \"Fleet Device Management\",\n    \"org_logo_url\": \"https://fleetdm.com/logo.png\",\n    \"org_logo_url_light_background\": \"https://fleetdm.com/logo-light.png\",\n    \"contact_url\": \"https://fleetdm.com/company/contact\"\n  },\n  \"server_settings\": {\n    \"server_url\": \"https://instance.fleet.com\",\n    \"enable_analytics\": true,\n    \"live_query_disabled\": false,\n    \"query_reports_disabled\": false,\n    \"ai_features_disabled\": false\n  },\n  \"smtp_settings\": {\n    \"enable_smtp\": true,\n    \"configured\": true,\n    \"sender_address\": \"\",\n    \"server\": \"localhost\",\n    \"port\": 1025,\n    \"authentication_type\": \"authtype_username_none\",\n    \"user_name\": \"\",\n    \"password\": \"********\",\n    \"enable_ssl_tls\": true,\n    \"authentication_method\": \"authmethod_plain\",\n    \"domain\": \"\",\n    \"verify_ssl_certs\": true,\n    \"enable_start_tls\": true\n  },\n  \"sso_settings\": {\n    \"entity_id\": \"\",\n    \"issuer_uri\": \"\",\n    \"idp_image_url\": \"\",\n    \"metadata\": \"\",\n    \"metadata_url\": \"\",\n    \"idp_name\": \"\",\n    \"enable_sso\": false,\n    \"enable_sso_idp_login\": false,\n    \"enable_jit_provisioning\": false\n  },\n  \"conditional_access\": {\n    \"microsoft_entra_tenant_id\": \"<TENANT ID>\",\n    \"microsoft_entra_connection_configured\": true\n  },\n  \"host_expiry_settings\": {\n    \"host_expiry_enabled\": false,\n    \"host_expiry_window\": 0\n  },\n  \"activity_expiry_settings\": {\n    \"activity_expiry_enabled\": false,\n    \"activity_expiry_window\": 0\n  },\n  \"features\": {\n    \"enable_host_users\": true,\n    \"enable_software_inventory\": true,\n    \"additional_queries\": null\n  },\n  \"license\": {\n    \"tier\": \"free\",\n    \"expiration\": \"0001-01-01T00:00:00Z\"\n  },\n  \"mdm\": {\n    \"enabled_and_configured\": false,\n    \"android_enabled_and_configured\": false,\n    \"windows_enabled_and_configured\": false,\n    \"enable_disk_encryption\": true,\n    \"macos_updates\": {\n      \"minimum_version\": \"12.3.1\",\n      \"deadline\": \"2022-01-01\"\n    },\n    \"ios_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"ipados_updates\": {\n      \"minimum_version\": \"17.0.1\",\n      \"deadline\": \"2024-08-01\"\n    },\n    \"windows_updates\": {\n      \"deadline_days\": 5,\n      \"grace_period_days\": 1\n    },\n    \"macos_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile1.mobileconfig\",\n          \"labels_exclude_any\": [\"Label 1\", \"Label 2\"]\n        },\n        {\n          \"path\": \"path/to/profile2.json\",\n          \"labels_include_all\": [\"Label 3\", \"Label 4\"]\n        },\n          {\n          \"path\": \"path/to/profile3.json\",\n          \"labels_include_any\": [\"Label 5\", \"Label 6\"]\n        }\n      ]\n    },\n    \"windows_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile3.xml\",\n          \"labels_exclude_any\": [\"Label 1\", \"Label 2\"]\n        }\n      ]\n    },\n    \"end_user_authentication\": {\n      \"entity_id\": \"\",\n      \"metadata\": \"\",\n      \"metadata_url\": \"\",\n      \"idp_name\": \"\"\n    },\n    \"macos_migration\": {\n      \"enable\": false,\n      \"mode\": \"voluntary\",\n      \"webhook_url\": \"https://webhook.example.com\"\n    },\n    \"macos_setup\": {\n      \"bootstrap_package\": \"\",\n      \"enable_end_user_authentication\": false,\n      \"macos_setup_assistant\": \"path/to/config.json\"\n    },\n    \"apple_server_url\": \"https://instance.fleet.com\"\n  },\n  \"agent_options\": {\n    \"config\": {\n      \"options\": {\n        \"pack_delimiter\": \"/\",\n        \"logger_tls_period\": 10,\n        \"distributed_plugin\": \"tls\",\n        \"disable_distributed\": false,\n        \"logger_tls_endpoint\": \"/api/v1/osquery/log\",\n        \"distributed_interval\": 10,\n        \"distributed_tls_max_attempts\": 3\n      },\n      \"decorators\": {\n        \"load\": [\n          \"SELECT uuid AS host_uuid FROM system_info;\",\n          \"SELECT hostname AS hostname FROM system_info\"\n        ]\n      }\n    },\n    \"overrides\": {},\n    \"command_line_flags\": {}\n  },\n  \"vulnerability_settings\": {\n    \"databases_path\": \"\"\n  },\n  \"fleet_desktop\": {\n    \"transparency_url\": \"https://fleetdm.com/better\"\n  },\n  \"gitops\": {\n    \"gitops_mode_enabled\": false,\n    \"repository_url\": \"\",\n  },\n  \"webhook_settings\": {\n    \"host_status_webhook\": {\n      \"enable_host_status_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"host_percentage\": 5,\n      \"days_count\": 7\n    },\n    \"failing_policies_webhook\":{\n      \"enable_failing_policies_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"policy_ids\": [1, 2, 3],\n      \"host_batch_size\": 1000\n    },\n    \"vulnerabilities_webhook\":{\n      \"enable_vulnerabilities_webhook\":true,\n      \"destination_url\": \"https://server.com\",n      \"host_batch_size\": 1000\n    },\n    \"activities_webhook\":{\n      \"enable_activities_webhook\":true,\n      \"destination_url\": \"https://server.com\"\n    }\n  },\n  \"integrations\": {\n    \"google_calendar\": [\n      {\n        \"domain\": \"\",\n        \"api_key_json\": null\n      }\n    ],\n    \"jira\": [\n      {\n        \"url\": \"https://jiraserver.com\",\n        \"username\": \"some_user\",\n        \"password\": \"sec4et!\",\n        \"project_key\": \"jira_project\",\n        \"enable_software_vulnerabilities\": false\n      }\n    ],\n    \"ndes_scep_proxy\": null,\n    \"zendesk\": []\n  },\n  \"logging\": {\n      \"debug\": false,\n      \"json\": false,\n      \"result\": {\n          \"plugin\": \"firehose\",\n          \"config\": {\n            \"region\": \"us-east-1\",\n            \"status_stream\": \"\",\n            \"result_stream\": \"result-topic\"\n          }\n      },\n      \"status\": {\n          \"plugin\": \"filesystem\",\n          \"config\": {\n            \"status_log_file\": \"foo_status\",\n            \"result_log_file\": \"\",\n            \"enable_log_rotation\": false,\n            \"enable_log_compression\": false\n          }\n      }\n  },\n  \"scripts\": []\n}"
						}
					]
				},
				{
					"name": "Get global enroll secrets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/spec/enroll_secret",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"spec",
								"enroll_secret"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"spec\": {\n    \"secrets\": [\n      {\n        \"secret\": \"vhPzPOnCMOMoqSrLxKxzSADyqncayacB\",\n        \"created_at\": \"2021-11-12T20:24:57Z\"\n      },\n      {\n        \"secret\": \"jZpexWGiXmXaFAKdrdttFHdJBqEnqlVF\",\n        \"created_at\": \"2021-11-12T20:24:57Z\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Modify global enroll secrets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"spec\": {\n    \"secrets\": [\n      {\n        \"secret\": \"KuSkYFsHBQVlaFtqOLwoUIWniHhpvEhP\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/spec/enroll_secret",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"spec",
								"enroll_secret"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Get team enroll secrets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/secrets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"secrets"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secrets\": [\n    {\n      \"created_at\": \"2021-06-16T22:05:49Z\",\n      \"secret\": \"aFtH2Nq09hrvi73ErlWNQfa7M53D3rPR\",\n      \"team_id\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Modify team enroll secrets",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"secrets\": [\n    {\n      \"secret\": \"n07v32y53c237734m3n201153c237\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/secrets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"secrets"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"secrets\": [\n    {\n      \"secret\": \"n07v32y53c237734m3n201153c237\",\n      \"created_at\": \"0001-01-01T00:00:00Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"version"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"version\": \"3.9.0-93-g1b67826f-dirty\",\n  \"branch\": \"version\",\n  \"revision\": \"1b67826fe4bf40b2f45ec53e01db9bf467752e74\",\n  \"go_version\": \"go1.15.7\",\n  \"build_date\": \"2021-03-27\",\n  \"build_user\": \"zwass\"\n}"
						}
					]
				}
			],
			"description": "Endpoints for retrieving and modifying Fleet server configuration, enroll secrets, and version info.\n\n[https://fleetdm.com/docs/rest-api/rest-api#fleet-configuration](https://fleetdm.com/docs/rest-api/rest-api#fleet-configuration)"
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "List hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "{{order_key}}",
									"description": "What to order results by. Can be any column in the hosts table",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "{{order_direction}}",
									"description": "Direction of the order given the order key. Options: asc, desc. Default: asc",
									"disabled": true
								},
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Status of hosts to return: new, online, offline, mia, missing",
									"disabled": true
								},
								{
									"key": "query",
									"value": "{{query}}",
									"description": "Search query keywords. Searchable fields: hostname, hardware_serial, uuid, ipv4, email addresses",
									"disabled": true
								},
								{
									"key": "additional_info_filters",
									"value": "{{additional_info_filters}}",
									"description": "Comma-delimited list of fields to include in each host's additional object",
									"disabled": true
								},
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Fleet Premium: Filter to only include hosts in the specified team. Use 0 for 'No team'",
									"disabled": true
								},
								{
									"key": "policy_id",
									"value": "{{policy_id}}",
									"description": "ID of the policy to filter hosts by",
									"disabled": true
								},
								{
									"key": "policy_response",
									"value": "{{policy_response}}",
									"description": "Requires policy_id. Valid options: passing, failing",
									"disabled": true
								},
								{
									"key": "software_version_id",
									"value": "{{software_version_id}}",
									"description": "ID of the software version to filter hosts by",
									"disabled": true
								},
								{
									"key": "software_title_id",
									"value": "{{software_title_id}}",
									"description": "ID of the software title to filter hosts by",
									"disabled": true
								},
								{
									"key": "software_status",
									"value": "{{software_status}}",
									"description": "Status of software install: pending_install, failed_install, installed, pending_uninstall, failed_uninstall, pending, failed",
									"disabled": true
								},
								{
									"key": "os_version_id",
									"value": "{{os_version_id}}",
									"description": "ID of the operating system version to filter hosts by",
									"disabled": true
								},
								{
									"key": "os_name",
									"value": "{{os_name}}",
									"description": "Name of the operating system to filter hosts by. Requires os_version",
									"disabled": true
								},
								{
									"key": "os_version",
									"value": "{{os_version}}",
									"description": "Version of the operating system to filter hosts by. Requires os_name",
									"disabled": true
								},
								{
									"key": "vulnerability",
									"value": "{{vulnerability}}",
									"description": "CVE to filter hosts by (including 'cve-' prefix, case-insensitive)",
									"disabled": true
								},
								{
									"key": "device_mapping",
									"value": "{{device_mapping}}",
									"description": "Include device_mapping for each host",
									"disabled": true
								},
								{
									"key": "mdm_id",
									"value": "{{mdm_id}}",
									"description": "ID of the mobile device management solution to filter hosts by",
									"disabled": true
								},
								{
									"key": "mdm_name",
									"value": "{{mdm_name}}",
									"description": "Name of the mobile device management solution to filter hosts by",
									"disabled": true
								},
								{
									"key": "mdm_enrollment_status",
									"value": "{{mdm_enrollment_status}}",
									"description": "MDM enrollment status: manual, automatic, enrolled, pending, unenrolled",
									"disabled": true
								},
								{
									"key": "connected_to_fleet",
									"value": "{{connected_to_fleet}}",
									"description": "Filter hosts talking to this Fleet server for MDM features",
									"disabled": true
								},
								{
									"key": "macos_settings",
									"value": "{{macos_settings}}",
									"description": "Filter by MDM profile status: verified, verifying, pending, failed",
									"disabled": true
								},
								{
									"key": "munki_issue_id",
									"value": "{{munki_issue_id}}",
									"description": "ID of the munki issue to filter hosts by",
									"disabled": true
								},
								{
									"key": "low_disk_space",
									"value": "{{low_disk_space}}",
									"description": "Fleet Premium: Filter hosts with less GB of disk space available than this value (1-100)",
									"disabled": true
								},
								{
									"key": "disable_failing_policies",
									"value": "{{disable_failing_policies}}",
									"description": "If true, hosts return failing policies as 0 regardless of failures",
									"disabled": true
								},
								{
									"key": "macos_settings_disk_encryption",
									"value": "{{macos_settings_disk_encryption}}",
									"description": "Filter by disk encryption status: verified, verifying, action_required, enforcing, failed, removing_enforcement",
									"disabled": true
								},
								{
									"key": "bootstrap_package",
									"value": "{{bootstrap_package}}",
									"description": "Fleet Premium: Filter by MDM bootstrap package status: installed, pending, failed",
									"disabled": true
								},
								{
									"key": "os_settings",
									"value": "{{os_settings}}",
									"description": "Filter by OS settings status: verified, verifying, pending, failed",
									"disabled": true
								},
								{
									"key": "os_settings_disk_encryption",
									"value": "{{os_settings_disk_encryption}}",
									"description": "Filter by disk encryption status: verified, verifying, action_required, enforcing, failed, removing_enforcement",
									"disabled": true
								},
								{
									"key": "populate_software",
									"value": "{{populate_software}}",
									"description": "Include software details: false, without_vulnerability_details, true",
									"disabled": true
								},
								{
									"key": "populate_policies",
									"value": "{{populate_policies}}",
									"description": "Include policy data for each host",
									"disabled": true
								},
								{
									"key": "populate_users",
									"value": "{{populate_users}}",
									"description": "Include user data for each host",
									"disabled": true
								},
								{
									"key": "populate_labels",
									"value": "{{populate_labels}}",
									"description": "Include labels for each host",
									"disabled": true
								},
								{
									"key": "profile_uuid",
									"value": "{{profile_uuid}}",
									"description": "Requires profile_status. UUID of the profile to download",
									"disabled": true
								},
								{
									"key": "profile_status",
									"value": "{{profile_status}}",
									"description": "Requires profile_uuid. Valid options: verified, verifying, pending, failed",
									"disabled": true
								},
								{
									"key": "after",
									"value": "{{after}}",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hosts\": [\n    {\n      \"created_at\": \"2020-11-05T05:09:44Z\",\n      \"updated_at\": \"2020-11-05T06:03:39Z\",\n      \"id\": 1,\n      \"detail_updated_at\": \"2020-11-05T05:09:45Z\",\n      \"last_restarted_at\": \"2020-11-01T03:01:45Z\",\n      \"software_updated_at\": \"2020-11-05T05:09:44Z\",\n      \"label_updated_at\": \"2020-11-05T05:14:51Z\",\n      \"policy_updated_at\": \"2023-06-26T18:33:15Z\",\n      \"last_enrolled_at\": \"2023-02-26T22:33:12Z\",\n      \"seen_time\": \"2020-11-05T06:03:39Z\",\n      \"hostname\": \"Annas-MacBook-Pro.local\",\n      \"uuid\": \"392547dc-0000-0000-a87a-d701ff75bc65\",\n      \"platform\": \"darwin\",\n      \"osquery_version\": \"5.15.0\",\n      \"os_version\": \"macOS 15.2\",\n      \"build\": \"24C101\",\n      \"platform_like\": \"darwin\",\n      \"code_name\": \"\",\n      \"uptime\": 8305000000000,\n      \"memory\": 2084032512,\n      \"cpu_type\": \"arm64e\",\n      \"cpu_subtype\": \"ARM64E\",\n      \"cpu_brand\": \"Apple M1\",\n      \"cpu_physical_cores\": 8,\n      \"cpu_logical_cores\": 8,\n      \"hardware_vendor\": \"Apple Inc.\",\n      \"hardware_model\": \"MacBookPro17,1\",\n      \"hardware_version\": \"\",\n      \"hardware_serial\": \"C0124FXASD6G\",\n      \"computer_name\": \"Anna's MacBook Pro\",\n      \"display_name\": \"Anna's MacBook Pro\",\n      \"public_ip\": \"123.45.678.910\",\n      \"primary_ip\": \"192.12.345.678\",\n      \"primary_mac\": \"36:34:a5:6b:7b:5c\",\n      \"distributed_interval\": 10,\n      \"config_tls_refresh\": 10,\n      \"logger_tls_period\": 8,\n      \"status\": \"offline\",\n      \"display_text\": \"Annas-MacBook-Pro.local\",\n      \"team_id\": null,\n      \"team_name\": null,\n      \"gigs_disk_space_available\": 174.98,\n      \"percent_disk_space_available\": 71,\n      \"gigs_total_disk_space\": 246,\n      \"additional\": {},\n      \"pack_stats\": [\n        {\n          \"pack_id\": 0,\n          \"pack_name\": \"Global\",\n          \"type\": \"global\",\n          \"query_stats\": [\n            {\n              \"scheduled_query_name\": \"Get recently added or removed USB drives\",\n              \"scheduled_query_id\": 5535,\n              \"query_name\": \"Get recently added or removed USB drives\",\n              \"discard_data\": false,\n              \"last_fetched\": null,\n              \"automations_enabled\": false,\n              \"description\": \"Returns a record every time a USB device is plugged in or removed\",\n              \"pack_name\": \"Global\",\n              \"average_memory\": 434176,\n              \"denylisted\": false,\n              \"executions\": 2,\n              \"interval\": 86400,\n              \"last_executed\": \"2023-11-28T00:02:07Z\",\n              \"output_size\": 891,\n              \"system_time\": 10,\n              \"user_time\": 6,\n              \"wall_time\": 0\n            }\n          ]\n        }\n      ],\n      \"issues\": {\n        \"failing_policies_count\": 1,\n        \"critical_vulnerabilities_count\": 2,\n        \"total_issues_count\": 3\n      },\n      \"geolocation\": {\n        \"country_iso\": \"US\",\n        \"city_name\": \"New York\",\n        \"geometry\": {\n          \"type\": \"point\",\n          \"coordinates\": [40.6799, -74.0028]\n        }\n      },\n      \"mdm\": {\n        \"encryption_key_available\": false,\n        \"enrollment_status\": \"Pending\",\n        \"dep_profile_error\": true,\n        \"name\": \"Fleet\",\n        \"server_url\": \"https://example.fleetdm.com/mdm/apple/mdm\"\n      },\n      \"software\": [\n        {\n          \"id\": 1,\n          \"name\": \"glibc\",\n          \"version\": \"2.12\",\n          \"source\": \"rpm_packages\",\n          \"generated_cpe\": \"cpe:2.3:a:gnu:glibc:2.12:*:*:*:*:*:*:*\",\n          \"vulnerabilities\": [\n            {\n              \"cve\": \"CVE-2009-5155\",\n              \"details_link\": \"https://nvd.nist.gov/vuln/detail/CVE-2009-5155\",\n              \"cvss_score\": 7.5,\n              \"epss_probability\": 0.01537,\n              \"cisa_known_exploit\": false,\n              \"cve_published\": \"2022-01-01 12:32:00\",\n              \"cve_description\": \"In the GNU C Library (aka glibc or libc6) before 2.28, parse_reg_exp in posix/regcomp.c misparses alternatives, which allows attackers to cause a denial of service (assertion failure and application exit) or trigger an incorrect result by attempting a regular-expression match.\",\n              \"resolved_in_version\": \"2.28\"\n            }\n          ],\n          \"installed_paths\": [\"/usr/lib/some-path-1\"]\n        }\n      ],\n      \"policies\": [\n        {\n          \"id\": 1,\n          \"name\": \"Gatekeeper enabled\",\n          \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n          \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n          \"resolution\": \"Fix with these steps...\",\n          \"platform\": \"darwin\",\n          \"response\": \"fail\",\n          \"fleet_maintained\": true,\n          \"critical\": false\n        }\n      ],\n      \"users\": [\n        {\n          \"uid\": 0,\n          \"username\": \"root\",\n          \"type\": \"\",\n          \"groupname\": \"root\",\n          \"shell\": \"/bin/bash\"\n        },\n        {\n          \"uid\": 1,\n          \"username\": \"bin\",\n          \"type\": \"\",\n          \"groupname\": \"bin\",\n          \"shell\": \"/sbin/nologin\"\n        }\n      ],\n      \"labels\": [\n        {\n          \"created_at\": \"2021-08-19T02:02:17Z\",\n          \"updated_at\": \"2021-08-19T02:02:17Z\",\n          \"id\": 6,\n          \"name\": \"All Hosts\",\n          \"description\": \"All hosts which have enrolled in Fleet\",\n          \"query\": \"SELECT 1;\",\n          \"platform\": \"\",\n          \"label_type\": \"builtin\",\n          \"label_membership_type\": \"dynamic\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Count hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"count"
							],
							"query": [
								{
									"key": "order_key",
									"value": "{{order_key}}",
									"description": "What to order results by. Can be any column in the hosts table",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "{{order_direction}}",
									"description": "Requires order_key. Direction of the order: asc, desc. Default: asc",
									"disabled": true
								},
								{
									"key": "after",
									"value": "{{after}}",
									"description": "Value to get results after. Requires order_key",
									"disabled": true
								},
								{
									"key": "status",
									"value": "{{status}}",
									"description": "Status of hosts to return: new, online, offline, mia, missing",
									"disabled": true
								},
								{
									"key": "query",
									"value": "{{query}}",
									"description": "Search query keywords. Searchable fields: hostname, hardware_serial, uuid, ipv4, email addresses",
									"disabled": true
								},
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Fleet Premium: Filter to only include hosts in the specified team",
									"disabled": true
								},
								{
									"key": "policy_id",
									"value": "{{policy_id}}",
									"description": "ID of the policy to filter hosts by",
									"disabled": true
								},
								{
									"key": "policy_response",
									"value": "{{policy_response}}",
									"description": "Requires policy_id. Valid options: passing, failing",
									"disabled": true
								},
								{
									"key": "software_version_id",
									"value": "{{software_version_id}}",
									"description": "ID of the software version to filter hosts by",
									"disabled": true
								},
								{
									"key": "software_title_id",
									"value": "{{software_title_id}}",
									"description": "ID of the software title to filter hosts by",
									"disabled": true
								},
								{
									"key": "os_version_id",
									"value": "{{os_version_id}}",
									"description": "ID of the operating system version to filter hosts by",
									"disabled": true
								},
								{
									"key": "os_name",
									"value": "{{os_name}}",
									"description": "Name of the operating system to filter hosts by. Requires os_version",
									"disabled": true
								},
								{
									"key": "os_version",
									"value": "{{os_version}}",
									"description": "Version of the operating system to filter hosts by. Requires os_name",
									"disabled": true
								},
								{
									"key": "vulnerability",
									"value": "{{vulnerability}}",
									"description": "CVE to filter hosts by (including 'cve-' prefix, case-insensitive)",
									"disabled": true
								},
								{
									"key": "label_id",
									"value": "{{label_id}}",
									"description": "Valid label ID. Can only be used with order_key, order_direction, after, status, query, and team_id",
									"disabled": true
								},
								{
									"key": "mdm_id",
									"value": "{{mdm_id}}",
									"description": "ID of the mobile device management solution to filter hosts by",
									"disabled": true
								},
								{
									"key": "mdm_name",
									"value": "{{mdm_name}}",
									"description": "Name of the mobile device management solution to filter hosts by",
									"disabled": true
								},
								{
									"key": "mdm_enrollment_status",
									"value": "{{mdm_enrollment_status}}",
									"description": "MDM enrollment status: manual, automatic, enrolled, pending, unenrolled",
									"disabled": true
								},
								{
									"key": "macos_settings",
									"value": "{{macos_settings}}",
									"description": "Filter by MDM profile status: verified, verifying, pending, failed",
									"disabled": true
								},
								{
									"key": "munki_issue_id",
									"value": "{{munki_issue_id}}",
									"description": "ID of the munki issue to filter hosts by",
									"disabled": true
								},
								{
									"key": "low_disk_space",
									"value": "{{low_disk_space}}",
									"description": "Fleet Premium: Filter hosts with less GB of disk space available than this value (1-100)",
									"disabled": true
								},
								{
									"key": "macos_settings_disk_encryption",
									"value": "{{macos_settings_disk_encryption}}",
									"description": "Filter by disk encryption status: verified, verifying, action_required, enforcing, failed, removing_enforcement",
									"disabled": true
								},
								{
									"key": "bootstrap_package",
									"value": "{{bootstrap_package}}",
									"description": "Fleet Premium: Filter by MDM bootstrap package status: installed, pending, failed",
									"disabled": true
								},
								{
									"key": "os_settings",
									"value": "{{os_settings}}",
									"description": "Filter by OS settings status: verified, verifying, pending, failed",
									"disabled": true
								},
								{
									"key": "os_settings_disk_encryption",
									"value": "{{os_settings_disk_encryption}}",
									"description": "Filter by disk encryption status: verified, verifying, action_required, enforcing, failed, removing_enforcement",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 123\n}"
						}
					]
				},
				{
					"name": "Get hosts summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/host_summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"host_summary"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Fleet Premium: ID of the team whose host counts should be included. Defaults to all teams",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "{{platform}}",
									"description": "Platform to filter by when counting. Defaults to all platforms",
									"disabled": true
								},
								{
									"key": "low_disk_space",
									"value": "{{low_disk_space}}",
									"description": "Fleet Premium: Returns count of hosts with less GB of disk space available than this value (1-100)",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"team_id\": 1,\n  \"totals_hosts_count\": 2408,\n  \"online_count\": 2267,\n  \"offline_count\": 141,\n  \"mia_count\": 0,\n  \"missing_30_days_count\": 0,\n  \"new_count\": 0,\n  \"all_linux_count\": 1204,\n  \"low_disk_space_count\": 12,\n  \"builtin_labels\": [\n    {\n      \"id\": 6,\n      \"name\": \"All Hosts\",\n      \"description\": \"All hosts which have enrolled in Fleet\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"macOS\",\n      \"description\": \"All macOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Ubuntu Linux\",\n      \"description\": \"All Ubuntu hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 9,\n      \"name\": \"CentOS Linux\",\n      \"description\": \"All CentOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 10,\n      \"name\": \"MS Windows\",\n      \"description\": \"All Windows hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 11,\n      \"name\": \"Red Hat Linux\",\n      \"description\": \"All Red Hat Enterprise Linux hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"All Linux\",\n      \"description\": \"All Linux distributions\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 13,\n      \"name\": \"iOS\",\n      \"description\": \"All iOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"iPadOS\",\n      \"description\": \"All iPadOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 15,\n      \"name\": \"Fedora Linux\",\n      \"description\": \"All Fedora hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Android\",\n      \"description\": \"All Android hosts\",\n      \"label_type\": \"builtin\"\n    }\n  ],\n  \"platforms\": [\n    {\n      \"platform\": \"chrome\",\n      \"hosts_count\": 1234\n    },\n    {\n      \"platform\": \"darwin\",\n      \"hosts_count\": 1234\n    },\n    {\n      \"platform\": \"ios\",\n      \"hosts_count\": 1234\n    },\n    {\n      \"platform\": \"ipados\",\n      \"hosts_count\": 1234\n    },\n    {\n      \"platform\": \"rhel\",\n      \"hosts_count\": 1234\n    },\n    {\n      \"platform\": \"ubuntu\",\n      \"hosts_count\": 12044\n    },\n    {\n      \"platform\": \"windows\",\n      \"hosts_count\": 12044\n    },\n    {\n      \"platform\": \"Android\",\n      \"hosts_count\": 200\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get host",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id"
							],
							"query": [
								{
									"key": "exclude_software",
									"value": "{{exclude_software}}",
									"description": "If true, the response will not include a list of installed software for the host",
									"disabled": true
								},
								{
									"key": "exclude_fleet_maintained_policies",
									"value": "{{exclude_fleet_maintained_policies}}",
									"description": "If true, will omit Fleet-maintained policies from the policies list",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host\": {\n    \"created_at\": \"2021-08-19T02:02:22Z\",\n    \"updated_at\": \"2021-08-19T21:14:58Z\",\n    \"id\": 1,\n    \"detail_updated_at\": \"2021-08-19T21:07:53Z\",\n    \"last_restarted_at\": \"2020-11-01T03:01:45Z\",\n    \"software_updated_at\": \"2020-11-05T05:09:44Z\",\n    \"label_updated_at\": \"2021-08-19T21:07:53Z\",\n    \"policy_updated_at\": \"2023-06-26T18:33:15Z\",\n    \"last_enrolled_at\": \"2021-08-19T02:02:22Z\",\n    \"last_mdm_checked_in_at\": \"2023-02-26T22:33:12Z\",\n    \"last_mdm_enrolled_at\": \"2023-02-26T22:33:12Z\",\n    \"seen_time\": \"2021-08-19T21:14:58Z\",\n    \"refetch_requested\": false,\n    \"hostname\": \"Annas-MacBook-Pro.local\",\n    \"uuid\": \"309a4b7d-0000-0000-8e7f-26ae0815ede8\",\n    \"platform\": \"darwin\",\n    \"osquery_version\": \"5.15.0\",\n    \"orbit_version\": \"1.22.0\",\n    \"fleet_desktop_version\": \"1.22.0\",\n    \"scripts_enabled\": true,\n    \"os_version\": \"macOS 15.2\",\n    \"build\": \"24C101\",\n    \"platform_like\": \"darwin\",\n    \"code_name\": \"\",\n    \"uptime\": 210671000000000,\n    \"memory\": 16788398080,\n    \"cpu_type\": \"arm64e\",\n    \"cpu_subtype\": \"ARM64E\",\n    \"cpu_brand\": \"Apple M1\",\n    \"cpu_physical_cores\": 8,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"Apple Inc.\",\n    \"hardware_model\": \"MacBookPro17,1\",\n    \"hardware_version\": \"\",\n    \"hardware_serial\": \"C0124FXASD6G\",\n    \"computer_name\": \"Anna's MacBook Pro\",\n    \"display_name\": \"Anna's MacBook Pro\",\n    \"public_ip\": \"123.45.678.910\",\n    \"primary_ip\": \"172.27.0.6\",\n    \"primary_mac\": \"02:42:ac:1b:00:06\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 10,\n    \"logger_tls_period\": 10,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"gigs_disk_space_available\": 174.98,\n    \"percent_disk_space_available\": 71,\n    \"gigs_total_disk_space\": 246,\n    \"disk_encryption_enabled\": true,\n    \"status\": \"online\",\n    \"display_text\": \"Annas-MacBook-Pro.local\",\n    \"additional\": {},\n    \"issues\": {\n      \"failing_policies_count\": 1,\n      \"critical_vulnerabilities_count\": 2,\n      \"total_issues_count\": 3\n    },\n    \"batteries\": [\n      {\n        \"cycle_count\": 999,\n        \"health\": \"Normal\"\n      }\n    ],\n    \"geolocation\": {\n      \"country_iso\": \"US\",\n      \"city_name\": \"New York\",\n      \"geometry\": {\n        \"type\": \"point\",\n        \"coordinates\": [40.6799, -74.0028]\n      }\n    },\n    \"maintenance_window\": {\n      \"starts_at\": \"2024-06-18T13:27:18−04:00\",\n      \"timezone\": \"America/New_York\"\n    },\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/sh\"\n      },\n      {\n        \"uid\": 1,\n        \"username\": \"annachao\",\n        \"type\": \"\",\n        \"groupname\": \"staff\",\n        \"shell\": \"/bin/zsh\"\n      }\n    ],\n    \"end_users\": [\n      {\n        \"idp_info_updated_at\": \"2025-03-20T02:02:17Z\",\n        \"idp_id\": \"f26f8649-1e25-42c5-be71-1b1e6de56d3d\",\n        \"idp_username\": \"[email protected]\",\n        \"idp_full_name\": \"Anna Chao\",\n        \"idp_groups\": [\n          \"Product\",\n          \"Designers\"\n        ],\n        \"other_emails\": [\n          {\n            \"email\": \"[email protected]\",\n            \"source\": \"google_chrome_profiles\"\n          },\n          {\n            \"email\": \"[email protected]\",\n            \"source\": \"custom\"\n          }\n        ]\n      }\n    ],\n    \"labels\": [\n      {\n        \"created_at\": \"2021-08-19T02:02:17Z\",\n        \"updated_at\": \"2021-08-19T02:02:17Z\",\n        \"id\": 6,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"SELECT 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [],\n    \"policies\": [\n      {\n        \"id\": 2,\n        \"name\": \"SomeQuery2\",\n        \"query\": \"SELECT * FROM bar;\",\n        \"description\": \"this is another query\",\n        \"resolution\": \"fix with these other steps...\",\n        \"platform\": \"darwin\",\n        \"response\": \"fail\",\n        \"critical\": false,\n        \"fleet_maintained\": false\n      }\n    ],\n    \"software\": [\n      {\n        \"id\": 321,\n        \"name\": \"SomeApp.app\",\n        \"version\": \"1.0\",\n        \"source\": \"apps\",\n        \"browser\": \"\",\n        \"bundle_identifier\": \"com.some.app\",\n        \"last_opened_at\": \"2021-08-18T21:14:00Z\",\n        \"generated_cpe\": \"\",\n        \"vulnerabilities\": null,\n        \"installed_paths\": [\"/usr/lib/some-path-2\"]\n      }\n    ],\n    \"mdm\": {\n      \"encryption_key_available\": true,\n      \"enrollment_status\": \"On (manual)\",\n      \"name\": \"Fleet\",\n      \"connected_to_fleet\": true,\n      \"server_url\": \"https://acme.com/mdm/apple/mdm\",\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"\",\n      \"macos_settings\": {\n        \"disk_encryption\": \"verified\",\n        \"action_required\": null\n      },\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"installed\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"test.pkg\"\n      },\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": \"verified\",\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": [\n        {\n          \"profile_uuid\": \"954ec5ea-a334-4825-87b3-937e7e381f24\",\n          \"name\": \"profile1\",\n          \"status\": \"verifying\",\n          \"operation_type\": \"install\",\n          \"detail\": \"\"\n        }\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get host by identifier",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/identifier/:identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"identifier",
								":identifier"
							],
							"query": [
								{
									"key": "exclude_software",
									"value": "{{exclude_software}}",
									"description": "If true, the response will not include a list of installed software for the host",
									"disabled": true
								},
								{
									"key": "exclude_fleet_maintained_policies",
									"value": "{{exclude_fleet_maintained_policies}}",
									"description": "If true, will omit Fleet-maintained policies from the policies list",
									"disabled": true
								},
								{
									"key": "identifier",
									"value": "{{identifier}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "identifier",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host\": {\n    \"created_at\": \"2022-02-10T02:29:13Z\",\n    \"updated_at\": \"2022-10-14T17:07:11Z\",\n    \"id\": 33,\n    \"detail_updated_at\": \"2022-10-14T17:07:12Z\",\n    \"label_updated_at\": \"2022-10-14T17:07:12Z\",\n    \"policy_updated_at\": \"2022-10-14T17:07:12Z\",\n    \"last_enrolled_at\": \"2022-02-10T02:29:13Z\",\n    \"last_mdm_checked_in_at\": \"2023-02-26T22:33:12Z\",\n    \"last_mdm_enrolled_at\": \"2023-02-26T22:33:12Z\",\n    \"software_updated_at\": \"2020-11-05T05:09:44Z\",\n    \"seen_time\": \"2022-10-14T17:45:41Z\",\n    \"refetch_requested\": false,\n    \"hostname\": \"23cfc9caacf0\",\n    \"uuid\": \"392547dc-0000-0000-a87a-d701ff75bc65\",\n    \"platform\": \"ubuntu\",\n    \"osquery_version\": \"5.5.1\",\n    \"os_version\": \"Ubuntu 20.04.3 LTS\",\n    \"build\": \"\",\n    \"platform_like\": \"debian\",\n    \"code_name\": \"focal\",\n    \"uptime\": 20807520000000000,\n    \"memory\": 1024360448,\n    \"cpu_type\": \"x86_64\",\n    \"cpu_subtype\": \"63\",\n    \"cpu_brand\": \"DO-Regular\",\n    \"cpu_physical_cores\": 1,\n    \"cpu_logical_cores\": 1,\n    \"hardware_vendor\": \"\",\n    \"hardware_model\": \"\",\n    \"hardware_version\": \"\",\n    \"hardware_serial\": \"\",\n    \"computer_name\": \"23cfc9caacf0\",\n    \"public_ip\": \"\",\n    \"primary_ip\": \"172.27.0.6\",\n    \"primary_mac\": \"02:42:ac:1b:00:06\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 60,\n    \"logger_tls_period\": 10,\n    \"team_id\": 2,\n    \"team_name\": null,\n    \"gigs_disk_space_available\": 19.29,\n    \"percent_disk_space_available\": 74,\n    \"gigs_total_disk_space\": 192,\n    \"issues\": {\n      \"failing_policies_count\": 1,\n      \"critical_vulnerabilities_count\": 2,\n      \"total_issues_count\": 3\n    },\n    \"batteries\": [\n      {\n        \"cycle_count\": 999,\n        \"health\": \"Normal\"\n      }\n    ],\n    \"geolocation\": {\n      \"country_iso\": \"US\",\n      \"city_name\": \"New York\",\n      \"geometry\": {\n        \"type\": \"point\",\n        \"coordinates\": [40.6799, -74.0028]\n      }\n    },\n    \"pack_stats\": [\n      {\n        \"pack_id\": 1,\n        \"pack_name\": \"Global\",\n        \"type\": \"global\",\n        \"query_stats\": [\n          {\n            \"scheduled_query_name\": \"Get running processes (with user_name)\",\n            \"scheduled_query_id\": 49,\n            \"query_name\": \"Get running processes (with user_name)\",\n            \"pack_name\": \"Global\",\n            \"pack_id\": 1,\n            \"average_memory\": 260000,\n            \"denylisted\": false,\n            \"executions\": 1,\n            \"interval\": 86400,\n            \"last_executed\": \"2022-10-14T10:00:01Z\",\n            \"output_size\": 198,\n            \"system_time\": 20,\n            \"user_time\": 80,\n            \"wall_time\": 0\n          }\n        ]\n      }\n    ],\n    \"labels\": [\n      {\n        \"created_at\": \"2021-09-14T05:11:02Z\",\n        \"updated_at\": \"2021-09-14T05:11:02Z\",\n        \"id\": 12,\n        \"name\": \"All Linux\",\n        \"description\": \"All Linux distributions\",\n        \"query\": \"SELECT 1 FROM osquery_info WHERE build_platform LIKE '%ubuntu%' OR build_distro LIKE '%centos%';\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"packs\": [\n      {\n        \"created_at\": \"2021-09-17T05:28:54Z\",\n        \"updated_at\": \"2021-09-17T05:28:54Z\",\n        \"id\": 1,\n        \"name\": \"Global\",\n        \"description\": \"Global pack\",\n        \"disabled\": false,\n        \"type\": \"global\",\n        \"labels\": null,\n        \"label_ids\": null,\n        \"hosts\": null,\n        \"host_ids\": null,\n        \"teams\": null,\n        \"team_ids\": null\n      }\n    ],\n    \"policies\": [\n      {\n        \"id\": 142,\n        \"name\": \"Full disk encryption enabled (macOS)\",\n        \"query\": \"SELECT 1 FROM disk_encryption WHERE user_uuid IS NOT '' AND filevault_status = 'on' LIMIT 1;\",\n        \"description\": \"Checks to make sure that full disk encryption (FileVault) is enabled on macOS devices.\",\n        \"author_id\": 31,\n        \"author_name\": \"\",\n        \"author_email\": \"\",\n        \"team_id\": null,\n        \"resolution\": \"To enable full disk encryption, on the failing device, select System Preferences > Security & Privacy > FileVault > Turn On FileVault.\",\n        \"platform\": \"darwin,linux\",\n        \"created_at\": \"2022-09-02T18:52:19Z\",\n        \"updated_at\": \"2022-09-02T18:52:19Z\",\n        \"response\": \"fail\",\n        \"critical\": false,\n        \"fleet_maintained\": false\n      }\n    ],\n    \"software\": [\n      {\n        \"id\": 16923,\n        \"name\": \"Automat\",\n        \"version\": \"0.8.0\",\n        \"source\": \"python_packages\",\n        \"browser\": \"\",\n        \"generated_cpe\": \"\",\n        \"vulnerabilities\": null,\n        \"installed_paths\": [\"/usr/lib/some_path/\"]\n      }\n    ],\n    \"mdm\": {\n      \"encryption_key_available\": false,\n      \"enrollment_status\": null,\n      \"name\": \"\",\n      \"server_url\": null,\n      \"device_status\": \"unlocked\",\n      \"pending_action\": \"lock\",\n      \"macos_settings\": {\n        \"disk_encryption\": null,\n        \"action_required\": null\n      },\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"installed\",\n        \"detail\": \"\"\n      },\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": null,\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": [\n        {\n          \"profile_uuid\": \"954ec5ea-a334-4825-87b3-937e7e381f24\",\n          \"name\": \"profile1\",\n          \"status\": \"verifying\",\n          \"operation_type\": \"install\",\n          \"detail\": \"\"\n        }\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get host by device token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/device/:device_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"device",
								":device_token"
							],
							"variable": [
								{
									"key": "device_token",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host\": {\n    \"created_at\": \"2021-08-19T02:02:22Z\",\n    \"updated_at\": \"2021-08-19T21:14:58Z\",\n    \"id\": 1,\n    \"detail_updated_at\": \"2021-08-19T21:07:53Z\",\n    \"label_updated_at\": \"2021-08-19T21:07:53Z\",\n    \"last_enrolled_at\": \"2021-08-19T02:02:22Z\",\n    \"last_mdm_checked_in_at\": \"2023-02-26T22:33:12Z\",\n    \"last_mdm_enrolled_at\": \"2023-02-26T22:33:12Z\",\n    \"seen_time\": \"2021-08-19T21:14:58Z\",\n    \"refetch_requested\": false,\n    \"hostname\": \"Annas-MacBook-Pro.local\",\n    \"uuid\": \"309a4b7d-0000-0000-8e7f-26ae0815ede8\",\n    \"platform\": \"darwin\",\n    \"osquery_version\": \"5.15.0\",\n    \"os_version\": \"macOS 15.2\",\n    \"build\": \"24C101\",\n    \"platform_like\": \"darwin\",\n    \"code_name\": \"\",\n    \"uptime\": 210671000000000,\n    \"memory\": 16788398080,\n    \"cpu_type\": \"arm64e\",\n    \"cpu_subtype\": \"ARM64E\",\n    \"cpu_brand\": \"Apple M1\",\n    \"cpu_physical_cores\": 8,\n    \"cpu_logical_cores\": 8,\n    \"hardware_vendor\": \"Apple Inc.\",\n    \"hardware_model\": \"MacBookPro17,1\",\n    \"hardware_version\": \"\",\n    \"hardware_serial\": \"\",\n    \"computer_name\": \"Anna's MacBook Pro\",\n    \"display_name\": \"Anna's MacBook Pro\",\n    \"public_ip\": \"123.45.678.910\",\n    \"primary_ip\": \"192.12.345.678\",\n    \"primary_mac\": \"36:34:a5:6b:7b:5c\",\n    \"distributed_interval\": 10,\n    \"config_tls_refresh\": 10,\n    \"logger_tls_period\": 10,\n    \"team_id\": null,\n    \"pack_stats\": null,\n    \"team_name\": null,\n    \"additional\": {},\n    \"gigs_disk_space_available\": 174.98,\n    \"percent_disk_space_available\": 71,\n    \"gigs_total_disk_space\": 246,\n    \"disk_encryption_enabled\": true,\n    \"dep_assigned_to_fleet\": false,\n    \"status\": \"online\",\n    \"display_text\": \"Annas-MacBook-Pro.local\",\n    \"self_service\": true,\n    \"org_logo_url\": \"https://example.com/logo.jpg\",\n    \"license\": {\n      \"tier\": \"free\",\n      \"expiration\": \"2031-01-01T00:00:00Z\"\n    },\n    \"global_config\": {\n      \"mdm\": {\n        \"enabled_and_configured\": false\n      }\n    },\n    \"batteries\": [\n      {\n        \"cycle_count\": 999,\n        \"health\": \"Good\"\n      }\n    ],\n    \"users\": [\n      {\n        \"uid\": 0,\n        \"username\": \"root\",\n        \"type\": \"\",\n        \"groupname\": \"root\",\n        \"shell\": \"/bin/sh\"\n      },\n      {\n        \"uid\": 1,\n        \"username\": \"annachao\",\n        \"type\": \"\",\n        \"groupname\": \"staff\",\n        \"shell\": \"/bin/zsh\"\n      }\n    ],\n    \"labels\": [\n      {\n        \"created_at\": \"2021-08-19T02:02:17Z\",\n        \"updated_at\": \"2021-08-19T02:02:17Z\",\n        \"id\": 6,\n        \"name\": \"All Hosts\",\n        \"description\": \"All hosts which have enrolled in Fleet\",\n        \"query\": \"SELECT 1;\",\n        \"platform\": \"\",\n        \"label_type\": \"builtin\",\n        \"label_membership_type\": \"dynamic\"\n      }\n    ],\n    \"software\": [\n      {\n        \"id\": 321,\n        \"name\": \"SomeApp.app\",\n        \"version\": \"1.0\",\n        \"source\": \"apps\",\n        \"browser\": \"\",\n        \"bundle_identifier\": \"com.some.app\",\n        \"last_opened_at\": \"2021-08-18T21:14:00Z\",\n        \"generated_cpe\": \"\",\n        \"vulnerabilities\": null\n      }\n    ],\n    \"packs\": [],\n    \"mdm\": {\n      \"encryption_key_available\": true,\n      \"enrollment_status\": \"On (manual)\",\n      \"name\": \"Fleet\",\n      \"connected_to_fleet\": true,\n      \"server_url\": \"https://acme.com/mdm/apple/mdm\",\n      \"macos_settings\": {\n        \"disk_encryption\": \"verified\",\n        \"action_required\": null\n      },\n      \"macos_setup\": {\n        \"bootstrap_package_status\": \"installed\",\n        \"detail\": \"\",\n        \"bootstrap_package_name\": \"test.pkg\"\n      },\n      \"os_settings\": {\n        \"disk_encryption\": {\n          \"status\": \"verified\",\n          \"detail\": \"\"\n        }\n      },\n      \"profiles\": [\n        {\n          \"profile_uuid\": \"954ec5ea-a334-4825-87b3-937e7e381f24\",\n          \"name\": \"profile1\",\n          \"status\": \"verifying\",\n          \"operation_type\": \"install\",\n          \"detail\": \"\"\n        }\n      ]\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Refetch host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/refetch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"refetch"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Transfer hosts to a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hosts\": [{{host_id}}, {{host_id}}],\n  \"team_id\": {{team_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"transfer"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Transfer hosts to a team by filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filters\": {\n    \"status\": \"new, online, offline, mia, missing\",\n    \"query\": \"hostname, hardware_serial, uuid, ipv4\",\n    \"label_id\": \"\",\n    \"team_id\": \"\"\n  },\n  \"team_id\": {{team_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/transfer/filter",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"transfer",
								"filter"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Turn off MDM for a host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/mdm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"mdm"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (204)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Batch-delete hosts by filter or ids",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// Option 1: Delete by IDs\n{\n  \"ids\": [{{host_id}}]\n}\n\n// Option 2: Delete by filter\n{\n  \"filters\": {\n    \"query\": \"search keywords\",\n    \"status\": \"offline\",\n    \"label_id\": 1,\n    \"team_id\": 2\n  }\n}\n\n// Option 3: Delete all hosts (empty filters)\n{\n  \"filters\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"delete"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Update custom human-device mapping",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"example@domain.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/device_mapping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"device_mapping"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 1,\n  \"device_mapping\": [\n    {\n      \"email\": \"example@domain.com\",\n      \"source\": \"mdm_idp_accounts\"\n    },\n    {\n      \"email\": \"example@domain.com\",\n      \"source\": \"google_chrome_profiles\"\n    },\n    {\n      \"email\": \"example@domain.com\",\n      \"source\": \"custom\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get host's device health report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"health"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 1,\n  \"health\": {\n    \"updated_at\": \"2023-09-16T18:52:19Z\",\n    \"os_version\": \"CentOS Linux 8.3.2011\",\n    \"disk_encryption_enabled\": true,\n    \"failing_policies_count\": 1,\n    \"failing_critical_policies_count\": 1,\n    \"failing_policies\": [\n      {\n        \"id\": 123,\n        \"name\": \"Google Chrome is up to date\",\n        \"critical\": true,\n        \"resolution\": \"Follow the Update Google Chrome instructions here: https://support.google.com/chrome/answer/95414?sjid=6534253818042437614-NA\",\n        \"fleet_maintained\": false\n      }\n    ],\n    \"vulnerable_software\": [\n      {\n        \"id\": 321,\n        \"name\": \"Firefox.app\",\n        \"version\": \"116.0.3\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get host's mobile device management (MDM) information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/mdm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"mdm"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"enrollment_status\": \"On (automatic)\",\n  \"server_url\": \"some.mdm.com\",\n  \"name\": \"Some MDM\",\n  \"id\": 3\n}"
						}
					]
				},
				{
					"name": "Get mobile device management (MDM) summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/summary/mdm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"summary",
								"mdm"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Available in Fleet Premium. Filter by team",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "{{platform}}",
									"description": "Filter by platform (\"windows\" or \"darwin\")",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"counts_updated_at\": \"2021-03-21T12:32:44Z\",\n  \"mobile_device_management_enrollment_status\": {\n    \"enrolled_manual_hosts_count\": 0,\n    \"enrolled_automated_hosts_count\": 2,\n    \"unenrolled_hosts_count\": 0,\n    \"hosts_count\": 2\n  },\n  \"mobile_device_management_solution\": [\n    {\n      \"id\": 2,\n      \"name\": \"Solution1\",\n      \"server_url\": \"solution1.com\",\n      \"hosts_count\": 1\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Solution2\",\n      \"server_url\": \"solution2.com\",\n      \"hosts_count\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get host's mobile device management (MDM) and Munki information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/macadmins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"macadmins"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"macadmins\": {\n    \"munki\": {\n      \"version\": \"1.2.3\"\n    },\n    \"munki_issues\": [\n      {\n        \"id\": 1,\n        \"name\": \"Could not retrieve managed install primary manifest\",\n        \"type\": \"error\",\n        \"created_at\": \"2022-08-01T05:09:44Z\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Could not process item Figma for optional install. No pkginfo found in catalogs: release\",\n        \"type\": \"warning\",\n        \"created_at\": \"2022-08-01T05:09:44Z\"\n      }\n    ],\n    \"mobile_device_management\": {\n      \"enrollment_status\": \"On (automatic)\",\n      \"server_url\": \"http://some.url/mdm\",\n      \"name\": \"MDM Vendor Name\",\n      \"id\": 999\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get aggregated host's mobile device management (MDM) and Munki information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/macadmins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"macadmins"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Available in Fleet Premium. Filters the aggregate host information to only include hosts in the specified team.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"macadmins\": {\n    \"counts_updated_at\": \"2021-03-21T12:32:44Z\",\n    \"munki_versions\": [\n      {\n        \"version\": \"5.5\",\n        \"hosts_count\": 8360\n      },\n      {\n        \"version\": \"5.4\",\n        \"hosts_count\": 1700\n      }\n    ],\n    \"munki_issues\": [\n      {\n        \"id\": 1,\n        \"name\": \"Could not retrieve managed install primary manifest\",\n        \"type\": \"error\",\n        \"hosts_count\": 2851\n      }\n    ],\n    \"mobile_device_management_enrollment_status\": {\n      \"enrolled_manual_hosts_count\": 124,\n      \"enrolled_automated_hosts_count\": 124,\n      \"unenrolled_hosts_count\": 112\n    },\n    \"mobile_device_management_solution\": [\n      {\n        \"id\": 1,\n        \"name\": \"SimpleMDM\",\n        \"hosts_count\": 8360,\n        \"server_url\": \"https://a.simplemdm.com/mdm\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get host's software",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/software",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"software"
							],
							"query": [
								{
									"key": "query",
									"value": "{{query}}",
									"description": "Search query keywords. Searchable fields include name.",
									"disabled": true
								},
								{
									"key": "available_for_install",
									"value": "{{available_for_install}}",
									"description": "If true or 1, only list software that is available for install (added by the user). Default is false.",
									"disabled": true
								},
								{
									"key": "self_service",
									"value": "{{self_service}}",
									"description": "If true or 1, only lists self-service software. Default is false.",
									"disabled": true
								},
								{
									"key": "vulnerable",
									"value": "{{vulnerable}}",
									"description": "If true or 1, only list software that have vulnerabilities. Default is false.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "{{order_key}}",
									"description": "What to order results by. Options include \"name\". Default is \"name\".",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "{{order_direction}}",
									"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\".",
									"disabled": true
								},
								{
									"key": "min_cvss_score",
									"value": "{{min_cvss_score}}",
									"description": "Available in Fleet Premium. Filters to include only software with vulnerabilities that have a CVSS version 3.x base score higher than the specified value.",
									"disabled": true
								},
								{
									"key": "max_cvss_score",
									"value": "{{max_cvss_score}}",
									"description": "Available in Fleet Premium. Filters to only include software with vulnerabilities that have a CVSS version 3.x base score lower than what's specified.",
									"disabled": true
								},
								{
									"key": "exploit",
									"value": "{{exploit}}",
									"description": "Available in Fleet Premium. If true, filters to only include software with vulnerabilities that have been actively exploited in the wild (cisa_known_exploit: true). Default is false.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 3,\n  \"software\": [\n    {\n      \"id\": 121,\n      \"name\": \"Google Chrome.app\",\n      \"software_package\": {\n        \"name\": \"GoogleChrome.pkg\",\n        \"platform\": \"darwin\",\n        \"version\": \"125.12.0.3\",\n        \"self_service\": true,\n        \"last_install\": {\n          \"install_uuid\": \"8bbb8ac2-b254-4387-8cba-4d8a0407368b\",\n          \"installed_at\": \"2024-05-15T15:23:57Z\"\n        }\n      },\n      \"app_store_app\": null,\n      \"source\": \"apps\",\n      \"status\": \"failed_install\",\n      \"installed_versions\": [\n        {\n          \"version\": \"121.0\",\n          \"bundle_identifier\": \"com.google.Chrome\",\n          \"last_opened_at\": \"2024-04-01T23:03:07Z\",\n          \"vulnerabilities\": [\"CVE-2023-1234\",\"CVE-2023-4321\",\"CVE-2023-7654\"],\n          \"installed_paths\": [\"/Applications/Google Chrome.app\"],\n          \"signature_information\": [\n            {\n              \"installed_path\": \"/Applications/Google Chrome.app\",\n              \"team_identifier\": \"EQHXZ8M8AV\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get hosts report in CSV",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/report",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"report"
							],
							"query": [
								{
									"key": "format",
									"value": null,
									"disabled": true
								},
								{
									"key": "columns",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "status",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								},
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "policy_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "policy_response",
									"value": null,
									"disabled": true
								},
								{
									"key": "software_version_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "software_title_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_version_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_version",
									"value": null,
									"disabled": true
								},
								{
									"key": "vulnerability",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_enrollment_status",
									"value": null,
									"disabled": true
								},
								{
									"key": "macos_settings",
									"value": null,
									"disabled": true
								},
								{
									"key": "munki_issue_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "low_disk_space",
									"value": null,
									"disabled": true
								},
								{
									"key": "label_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "bootstrap_package",
									"value": null,
									"disabled": true
								},
								{
									"key": "disable_failing_policies",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "hostname,uuid,platform,os_version,status,team_name\nAnnas-MacBook-Pro.local,392547dc-0000-0000-a87a-d701ff75bc65,darwin,macOS 15.2,offline,Team A\n23cfc9caacf0,392547dc-0000-0000-a87a-d701ff75bc66,ubuntu,Ubuntu 20.04.3 LTS,online,Team B"
						}
					]
				},
				{
					"name": "Get host's disk encryption key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/encryption_key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"encryption_key"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 8,\n  \"encryption_key\": {\n    \"key\": \"5ADZ-HTZ8-LJJ4-B2F8-JWH3-YPBT\",\n    \"updated_at\": \"2022-12-01T05:31:43Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get host's certificates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/certificates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"certificates"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration profiles assigned to a host",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/configuration_profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"configuration_profiles"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 8,\n  \"profiles\": [\n    {\n      \"profile_uuid\": \"bc84dae7-396c-4e10-9d45-5768bce8b8bd\",\n      \"team_id\": 0,\n      \"name\": \"Example profile\",\n      \"identifier\": \"com.example.profile\",\n      \"created_at\": \"2023-03-31T00:00:00Z\",\n      \"updated_at\": \"2023-03-31T00:00:00Z\",\n      \"checksum\": \"dGVzdAo=\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Lock host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"lock"
							],
							"query": [
								{
									"key": "view_pin",
									"value": "true",
									"description": "For macOS hosts, whether to return the unlock PIN.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"device_status\": \"unlocked\",\n  \"pending_action\": \"lock\"\n}"
						},
						{
							"name": "macOS hosts response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"unlock_pin\": \"123456\",\n  \"device_status\": \"unlocked\",\n  \"pending_action\": \"lock\"\n}"
						}
					]
				},
				{
					"name": "Unlock host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/unlock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"unlock"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Windows or Linux hosts response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 8,\n  \"device_status\": \"locked\",\n  \"pending_action\": \"unlock\"\n}"
						},
						{
							"name": "macOS hosts response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 8,\n  \"unlock_pin\": \"123456\",\n  \"device_status\": \"locked\",\n  \"pending_action\": \"unlock\"\n}"
						}
					]
				},
				{
					"name": "Wipe host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"windows\": {\n        \"wipe_type\": \"doWipe\"\n    }\n}\n\n// OR\n\n{\n    \"windows\": {\n        \"wipe_type\": \"doWipeProtected\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/wipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"wipe"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"device_status\": \"unlocked\",\n  \"pending_action\": \"wipe\"\n}"
						}
					]
				},
				{
					"name": "Get host's past activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"activities"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"activities\": [\n    {\n      \"created_at\": \"2025-02-20T10:09:48.551757Z\",\n      \"id\": 123,\n      \"actor_full_name\": \"Anna Chao\",\n      \"actor_id\": 12,\n      \"actor_gravatar\": \"\",\n      \"actor_email\": \"anna@fleetdm.com\",\n      \"type\": \"installed_software\",\n      \"fleet_initiated\": false,\n      \"details\": {\n          \"status\": \"installed\",\n          \"host_id\": 934,\n          \"policy_id\": null,\n          \"policy_name\": null,\n          \"install_uuid\": \"2fddb3d3-d553-4334-89a3-235da50d0ee7\",\n          \"self_service\": false,\n          \"software_title\": \"Notion.app\",\n          \"software_package\": \"Notion-4.5.0-arm64.dmg\",\n          \"host_display_name\": \"Marko's MacBook Pro\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get host's upcoming activity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/activities/upcoming",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"activities",
								"upcoming"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 3,\n  \"activities\": [\n    {\n      \"created_at\": \"2025-02-20T10:05:43.013218Z\",\n      \"uuid\": \"ce8ed8b1-8e77-413f-936c-4ef2f9b665f8\",\n      \"actor_full_name\": \"Anna Chao\",\n      \"actor_id\": 12,\n      \"actor_gravatar\": \"\",\n      \"actor_email\": \"anna@fleetdm.com\",\n      \"type\": \"installed_software\",\n      \"fleet_initiated\": false,\n      \"details\": {\n          \"status\": \"pending_install\",\n          \"host_id\": 934,\n          \"policy_id\": null,\n          \"policy_name\": null,\n          \"install_uuid\": \"2fddb3d3-d553-4334-89a3-235da50d0ee7\",\n          \"self_service\": false,\n          \"software_title\": \"Notion.app\",\n          \"software_package\": \"Notion-4.5.0-arm64.dmg\",\n          \"host_display_name\": \"Marko's MacBook Pro\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Cancel host's upcoming activity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/activities/upcoming/:activity_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"activities",
								"upcoming",
								":activity_id"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								},
								{
									"key": "activity_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (204)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add labels to host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"labels\": [\"label1\", \"label2\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"labels"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Remove labels from host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"labels\": [\"label3\", \"label4\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:host_id/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":host_id",
								"labels"
							],
							"variable": [
								{
									"key": "host_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Live query one host (ad-hoc)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"SELECT * FROM osquery_info;\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"query"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"campaign\": {\n    \"created_at\": \"2021-08-19T02:02:22Z\",\n    \"updated_at\": \"2021-08-19T02:02:22Z\",\n    \"Metrics\": {\n      \"total_hosts\": 1,\n      \"online_hosts\": 1,\n      \"offline_hosts\": 0,\n      \"missing_in_action_hosts\": 0,\n      \"new_hosts\": 0\n    },\n    \"id\": 1,\n    \"query_id\": 1,\n    \"status\": 0,\n    \"user_id\": 1,\n    \"type\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Live query host by identifier (ad-hoc)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"SELECT model, vendor FROM usb_devices;\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/identifier/:identifier/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								"identifier",
								":identifier",
								"query"
							],
							"variable": [
								{
									"key": "identifier",
									"value": "",
									"description": "hardware_serial, uuid, osquery_host_id, hostname, node_key"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 123,\n  \"query\": \"SELECT model, vendor FROM usb_devices;\",\n  \"status\": \"online\",\n  \"error\": null,\n  \"rows\": [\n    {\n      \"model\": \"USB2.0 Hub\",\n      \"vendor\": \"VIA Labs, Inc.\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Endpoints for listing, retrieving, and managing hosts in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#hosts](https://fleetdm.com/docs/rest-api/rest-api#hosts)"
		},
		{
			"name": "Labels",
			"item": [
				{
					"name": "Add label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"macOS hosts (x86_64)\",\n  \"description\": \"Filters macOS hosts with x86_64 architecture\",\n  \"query\": \"SELECT 1 FROM os_version WHERE platform = 'darwin' AND instr(arch, 'x86_64')\",\n  \"hosts\": [],\n  \"host_ids\": [],\n  \"platform\": \"darwin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"macOS hosts (x86_64)\",\n  \"description\": \"Filters macOS hosts with x86_64 architecture\",\n  \"query\": \"SELECT 1 FROM os_version WHERE platform = 'darwin' AND instr(arch, 'x86_64')\",\n  \"platform\": \"darwin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"label\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 42,\n    \"name\": \"macOS hosts (x86_64)\",\n    \"description\": \"Filters macOS hosts with x86_64 architecture\",\n    \"query\": \"SELECT 1 FROM os_version WHERE platform = 'darwin' AND instr(arch, 'x86_64')\",\n    \"label_type\": \"regular\",\n    \"label_membership_type\": \"dynamic\",\n    \"display_text\": \"macOS hosts (x86_64)\",\n    \"count\": 0,\n    \"host_ids\": null,\n    \"author_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Update label",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"description\": \"\",\n    \"hosts\": [\"ABC1234\", \"XYZ5678\"],\n    \"host_ids\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hosts\": [\"ABC1234\", \"XYZ5678\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/{{label_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"{{label_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"label\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 21,\n    \"name\": \"My label\",\n    \"description\": \"Some hosts that I want to manually group together\",\n    \"query\": \"\",\n    \"platform\": \"\",\n    \"label_type\": \"regular\",\n    \"label_membership_type\": \"manual\",\n    \"display_text\": \"My label\",\n    \"count\": 2,\n    \"host_ids\": [42, 43],\n    \"author_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/{{label_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"{{label_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"label\": {\n    \"created_at\": \"2021-02-09T22:09:43Z\",\n    \"updated_at\": \"2021-02-09T22:15:58Z\",\n    \"id\": 12,\n    \"name\": \"Ubuntu\",\n    \"description\": \"Filters ubuntu hosts\",\n    \"query\": \"SELECT 1 FROM os_version WHERE platform = 'ubuntu';\",\n    \"label_type\": \"regular\",\n    \"label_membership_type\": \"dynamic\",\n    \"display_text\": \"Ubuntu\",\n    \"count\": 0,\n    \"host_ids\": null,\n    \"author_id\": 1\n  }\n}"
						}
					]
				},
				{
					"name": "Get labels summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								"summary"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"summary"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"labels\": [\n    {\n      \"id\": 6,\n      \"name\": \"All Hosts\",\n      \"description\": \"All hosts which have enrolled in Fleet\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"macOS\",\n      \"description\": \"All macOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Ubuntu Linux\",\n      \"description\": \"All Ubuntu hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 9,\n      \"name\": \"CentOS Linux\",\n      \"description\": \"All CentOS hosts\",\n      \"label_type\": \"builtin\"\n    },\n    {\n      \"id\": 10,\n      \"name\": \"MS Windows\",\n      \"description\": \"All Windows hosts\",\n      \"label_type\": \"builtin\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List labels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels"
							],
							"query": [
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"labels\": [\n    {\n      \"created_at\": \"2021-02-02T23:55:25Z\",\n      \"updated_at\": \"2021-02-02T23:55:25Z\",\n      \"id\": 6,\n      \"name\": \"All Hosts\",\n      \"description\": \"All hosts which have enrolled in Fleet\",\n      \"query\": \"SELECT 1;\",\n      \"label_type\": \"builtin\",\n      \"label_membership_type\": \"dynamic\",\n      \"host_count\": 7,\n      \"display_text\": \"All Hosts\",\n      \"count\": 7,\n      \"host_ids\": null,\n      \"author_id\": 1\n    },\n    {\n      \"created_at\": \"2021-02-02T23:55:25Z\",\n      \"updated_at\": \"2021-02-02T23:55:25Z\",\n      \"id\": 7,\n      \"name\": \"macOS\",\n      \"description\": \"All macOS hosts\",\n      \"query\": \"SELECT 1 FROM os_version WHERE platform = 'darwin';\",\n      \"platform\": \"darwin\",\n      \"label_type\": \"builtin\",\n      \"label_membership_type\": \"dynamic\",\n      \"host_count\": 1,\n      \"display_text\": \"macOS\",\n      \"count\": 1,\n      \"host_ids\": null,\n      \"author_id\": 1\n    },\n    {\n      \"created_at\": \"2021-02-02T23:55:25Z\",\n      \"updated_at\": \"2021-02-02T23:55:25Z\",\n      \"id\": 8,\n      \"name\": \"Ubuntu Linux\",\n      \"description\": \"All Ubuntu hosts\",\n      \"query\": \"SELECT 1 FROM os_version WHERE platform = 'ubuntu';\",\n      \"platform\": \"ubuntu\",\n      \"label_type\": \"builtin\",\n      \"label_membership_type\": \"dynamic\",\n      \"host_count\": 3,\n      \"display_text\": \"Ubuntu Linux\",\n      \"count\": 3,\n      \"host_ids\": null,\n      \"author_id\": 1\n    },\n    {\n      \"created_at\": \"2021-02-02T23:55:25Z\",\n      \"updated_at\": \"2021-02-02T23:55:25Z\",\n      \"id\": 9,\n      \"name\": \"CentOS Linux\",\n      \"description\": \"All CentOS hosts\",\n      \"query\": \"SELECT 1 FROM os_version WHERE platform = 'centos' OR name LIKE '%centos%'\",\n      \"label_type\": \"builtin\",\n      \"label_membership_type\": \"dynamic\",\n      \"host_count\": 3,\n      \"display_text\": \"CentOS Linux\",\n      \"count\": 3,\n      \"host_ids\": null,\n      \"author_id\": 1\n    },\n    {\n      \"created_at\": \"2021-02-02T23:55:25Z\",\n      \"updated_at\": \"2021-02-02T23:55:25Z\",\n      \"id\": 10,\n      \"name\": \"MS Windows\",\n      \"description\": \"All Windows hosts\",\n      \"query\": \"SELECT 1 FROM os_version WHERE platform = 'windows';\",\n      \"platform\": \"windows\",\n      \"label_type\": \"builtin\",\n      \"label_membership_type\": \"dynamic\",\n      \"host_count\": 0,\n      \"display_text\": \"MS Windows\",\n      \"count\": 0,\n      \"host_ids\": null,\n      \"author_id\": 1\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List hosts in a label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/:id/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								":id",
								"hosts"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "after",
									"value": null,
									"disabled": true
								},
								{
									"key": "status",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								},
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "disable_failing_policies",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "mdm_enrollment_status",
									"value": null,
									"disabled": true
								},
								{
									"key": "macos_settings",
									"value": null,
									"disabled": true
								},
								{
									"key": "low_disk_space",
									"value": null,
									"disabled": true
								},
								{
									"key": "macos_settings_disk_encryption",
									"value": null,
									"disabled": true
								},
								{
									"key": "bootstrap_package",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_settings",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_settings_disk_encryption",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/{{label_id}}/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"{{label_id}}",
										"hosts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"hosts\": [\n    {\n      \"created_at\": \"2021-02-03T16:11:43Z\",\n      \"updated_at\": \"2021-02-03T21:58:19Z\",\n      \"id\": 2,\n      \"detail_updated_at\": \"2021-02-03T21:58:10Z\",\n      \"label_updated_at\": \"2021-02-03T21:58:10Z\",\n      \"policy_updated_at\": \"2023-06-26T18:33:15Z\",\n      \"last_enrolled_at\": \"2021-02-03T16:11:43Z\",\n      \"software_updated_at\": \"2020-11-05T05:09:44Z\",\n      \"seen_time\": \"2021-02-03T21:58:20Z\",\n      \"refetch_requested\": false,\n      \"hostname\": \"floobar42\",\n      \"uuid\": \"a2064cef-0000-0000-afb9-283e3c1d487e\",\n      \"platform\": \"ubuntu\",\n      \"osquery_version\": \"4.5.1\",\n      \"os_version\": \"Ubuntu 20.4.0\",\n      \"build\": \"\",\n      \"platform_like\": \"debian\",\n      \"code_name\": \"\",\n      \"uptime\": 32688000000000,\n      \"memory\": 2086899712,\n      \"cpu_type\": \"x86_64\",\n      \"cpu_subtype\": \"142\",\n      \"cpu_brand\": \"Intel(R) Core(TM) i5-8279U CPU @ 2.40GHz\",\n      \"cpu_physical_cores\": 4,\n      \"cpu_logical_cores\": 4,\n      \"hardware_vendor\": \"\",\n      \"hardware_model\": \"\",\n      \"hardware_version\": \"\",\n      \"hardware_serial\": \"\",\n      \"computer_name\": \"e2e7f8d8983d\",\n      \"display_name\": \"e2e7f8d8983d\",\n      \"primary_ip\": \"172.20.0.2\",\n      \"primary_mac\": \"02:42:ac:14:00:02\",\n      \"distributed_interval\": 10,\n      \"config_tls_refresh\": 10,\n      \"logger_tls_period\": 10,\n      \"team_id\": null,\n      \"pack_stats\": null,\n      \"team_name\": null,\n      \"status\": \"offline\",\n      \"display_text\": \"e2e7f8d8983d\",\n      \"mdm\": {\n        \"encryption_key_available\": false,\n        \"enrollment_status\": null,\n        \"name\": \"\",\n        \"server_url\": null\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete label",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/{{label_name}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"{{label_name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete label by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/labels/id/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"labels",
								"id",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/labels/id/{{label_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"labels",
										"id",
										"{{label_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "Endpoints for managing labels in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#labels](https://fleetdm.com/docs/rest-api/rest-api#labels)"
		},
		{
			"name": "OS settings",
			"item": [
				{
					"name": "Add custom OS setting (configuration profile)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "profile",
									"value": "",
									"description": "Required. The .mobileconfig, JSON, or XML file containing the configuration profile.",
									"type": "file"
								},
								{
									"key": "team_id",
									"description": "Optional (Fleet Premium). Team ID to target. If specified, applies only to hosts in this team.",
									"type": "text"
								},
								{
									"key": "labels_include_all",
									"description": "Optional (Fleet Premium). Array of label IDs. Only hosts with all these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
									"type": "text"
								},
								{
									"key": "labels_include_any",
									"description": "Optional (Fleet Premium). Array of label IDs. Hosts with any of these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
									"type": "text"
								},
								{
									"key": "labels_exclude_any",
									"description": "Optional (Fleet Premium). Array of label IDs. Hosts without any of these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "profile",
											"value": "",
											"description": "Required. The .mobileconfig, JSON, or XML file containing the configuration profile.",
											"type": "file"
										},
										{
											"key": "team_id",
											"description": "Optional (Fleet Premium). Team ID to target. If specified, applies only to hosts in this team.",
											"type": "text"
										},
										{
											"key": "labels_include_all",
											"description": "Optional (Fleet Premium). Array of label IDs. Only hosts with all these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
											"type": "text"
										},
										{
											"key": "labels_include_any",
											"description": "Optional (Fleet Premium). Array of label IDs. Hosts with any of these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
											"type": "text"
										},
										{
											"key": "labels_exclude_any",
											"description": "Optional (Fleet Premium). Array of label IDs. Hosts without any of these labels are targeted. Only one of labels_include_all, labels_include_any, or labels_exclude_any can be specified.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"configuration_profiles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"profile_uuid\": \"954ec5ea-a334-4825-87b3-937e7e381f24\"\n}"
						}
					]
				},
				{
					"name": "List custom OS settings (configuration profiles)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "(Fleet Premium) Team ID to filter profiles. If omitted, only 'No team' profiles are listed.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"configuration_profiles"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "(Fleet Premium) Team ID to filter profiles. If omitted, only 'No team' profiles are listed.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "{{page}}",
											"description": "Page number of the results to fetch.",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "{{per_page}}",
											"description": "Results per page.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"profiles\": [ ... ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get or download custom OS setting (configuration profile)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles/:profile_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles",
								":profile_uuid"
							],
							"query": [
								{
									"key": "alt",
									"value": "{{alt}}",
									"description": "If set to 'media', downloads the profile.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "profile_uuid",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles/{{profile_uuid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"configuration_profiles",
										"{{profile_uuid}}"
									],
									"query": [
										{
											"key": "alt",
											"value": "{{alt}}",
											"description": "If set to 'media', downloads the profile.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"profile_uuid\": \"f663713f-04ee-40f0-a95a-7af428c351a9\", ... }"
						}
					]
				},
				{
					"name": "Delete custom OS setting (configuration profile)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles/:profile_uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles",
								":profile_uuid"
							],
							"variable": [
								{
									"key": "profile_uuid",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Resend custom OS setting (configuration profile)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/configuration_profiles/:profile_uuid/resend",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"configuration_profiles",
								":profile_uuid",
								"resend"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "profile_uuid",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Batch-resend custom OS setting (configuration profile)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"profile_uuid\": \"{{profile_uuid}}\",\n  \"filters\": {\n    \"profile_status\": \"failed\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles/resend/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles",
								"resend",
								"batch"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update disk encryption enforcement",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"team_id\": {{team_id}},\n  \"enable_disk_encryption\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/disk_encryption",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"disk_encryption"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get disk encryption statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/disk_encryption",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"disk_encryption"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "(Fleet Premium) The team ID to filter the summary.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/disk_encryption",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"disk_encryption"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "(Fleet Premium) The team ID to filter the summary.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"verified\": {\"macos\": 123, \"windows\": 123, \"linux\": 13},\n  \"verifying\": {\"macos\": 123, \"windows\": 0, \"linux\": 0},\n  \"action_required\": {\"macos\": 123, \"windows\": 0, \"linux\": 37},\n  \"enforcing\": {\"macos\": 123, \"windows\": 123, \"linux\": 0},\n  \"failed\": {\"macos\": 123, \"windows\": 123, \"linux\": 0},\n  \"removing_enforcement\": {\"macos\": 123, \"windows\": 0, \"linux\": 0}\n}"
						}
					]
				},
				{
					"name": "Get OS settings summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profiles/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profiles",
								"summary"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "(Fleet Premium) The team ID to filter profiles.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get OS setting (configuration profile) status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/configuration_profile/:profile_uuid/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"configuration_profile",
								":profile_uuid",
								"status"
							],
							"variable": [
								{
									"key": "profile_uuid",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/configuration_profile/{{profile_uuid}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"configuration_profile",
										"{{profile_uuid}}",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"verified\": 123,\n  \"verifying\": 123,\n  \"failed\": 123,\n  \"pending\": 123\n}"
						}
					]
				}
			],
			"description": "Endpoints for managing OS settings (configuration profiles) and disk encryption.\n\n[https://fleetdm.com/docs/rest-api/rest-api#os-settings](https://fleetdm.com/docs/rest-api/rest-api#os-settings)"
		},
		{
			"name": "Setup experience",
			"item": [
				{
					"name": "Set custom MDM setup enrollment profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"team_id\": {{team_id}},\n  \"name\": \"{{name}}\",\n  \"enrollment_profile\": {\n    \"is_mandatory\": true,\n    \"is_mdm_removable\": false\n  }\n}\n\n// https://developer.apple.com/documentation/devicemanagement/profile",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/automatic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"enrollment_profiles",
								"automatic"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"team_id\": {{team_id}},\n  \"name\": \"{{name}}\",\n  \"enrollment_profile\": {\n    \"is_mandatory\": true,\n    \"is_mdm_removable\": false\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/automatic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"enrollment_profiles",
										"automatic"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"team_id\": 123,\n  \"name\": \"dep_profile.json\",\n  \"uploaded_at\": \"2023-04-04:00:00Z\",\n  \"enrollment_profile\": {\n    \"is_mandatory\": true,\n    \"is_mdm_removable\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get custom MDM setup enrollment profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/automatic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"enrollment_profiles",
								"automatic"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID for which to return the custom enrollment profile, or no team if omitted.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/automatic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"enrollment_profiles",
										"automatic"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "Team ID for which to return the custom enrollment profile, or no team if omitted.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"team_id\": 123,\n  \"name\": \"dep_profile.json\",\n  \"uploaded_at\": \"2023-04-04:00:00Z\",\n  \"enrollment_profile\": {\n    \"is_mandatory\": true,\n    \"is_mdm_removable\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Delete custom MDM setup enrollment profile",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/automatic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"enrollment_profiles",
								"automatic"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID for which to delete the custom enrollment profile, or no team if omitted.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Over-the-Air (OTA) enrollment profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/ota?enroll_secret={{enroll_secret}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"enrollment_profiles",
								"ota"
							],
							"query": [
								{
									"key": "enroll_secret",
									"value": "{{enroll_secret}}",
									"description": "Required. The enroll secret of the team this host will be assigned to."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get manual enrollment profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/enrollment_profiles/manual",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"enrollment_profiles",
								"manual"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload a bootstrap package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "package",
									"value": "",
									"description": "Required. The bootstrap package installer. Must be a signed pkg file.",
									"type": "file"
								},
								{
									"key": "team_id",
									"description": "Optional. Team ID for the package. If specified, package will be installed to hosts in this team.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "manual_agent_install",
									"description": "Optional. If true, Fleet's agent won't be installed during ADE. Default: false.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/bootstrap",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"bootstrap"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metadata about a bootstrap package",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/bootstrap/:team_id/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"bootstrap",
								":team_id",
								"metadata"
							],
							"query": [
								{
									"key": "for_update",
									"value": "",
									"description": "If true, authorization will be for write action instead of read.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/bootstrap/{{team_id}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"bootstrap",
										"{{team_id}}",
										"metadata"
									],
									"query": [
										{
											"key": "for_update",
											"value": "{{for_update}}",
											"description": "If true, authorization will be for write action instead of read.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"name\": \"bootstrap-package.pkg\",\n  \"team_id\": 0,\n  \"sha256\": \"6bebb4433322fd52837de9e4787de534b4089ac645b0692dfb74d000438da4a3\",\n  \"token\": \"AA598E2A-7952-46E3-B89D-526D45F7E233\",\n  \"created_at\": \"2023-04-20T13:02:05Z\"\n}"
						}
					]
				},
				{
					"name": "Delete a bootstrap package",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/bootstrap/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"bootstrap",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download a bootstrap package",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/bootstrap?token={{token}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"bootstrap"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}",
									"description": "Required. The token of the bootstrap package."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a summary of bootstrap package status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/bootstrap/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"bootstrap",
								"summary"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID to filter the summary.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/bootstrap/summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"bootstrap",
										"summary"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "Team ID to filter the summary.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"installed\": 10,\n  \"failed\": 1,\n  \"pending\": 4\n}"
						}
					]
				},
				{
					"name": "Configure setup experience",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"team_id\": {{team_id}},\n  \"enable_end_user_authentication\": true,\n  \"enable_release_device_manually\": true,\n  \"manual_agent_install\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload an EULA file",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "eula",
									"value": "",
									"description": "Required. A PDF document containing the EULA.",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/eula",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"eula"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metadata about an EULA file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/eula/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"eula",
								"metadata"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/eula/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"setup_experience",
										"eula",
										"metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"name\": \"eula.pdf\",\n  \"token\": \"AA598E2A-7952-46E3-B89D-526D45F7E233\",\n  \"created_at\": \"2023-04-20T13:02:05Z\"\n}"
						}
					]
				},
				{
					"name": "Delete an EULA file",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/eula/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"eula",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download an EULA file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/eula/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"eula",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List software (setup experience)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/software",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"software"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID to filter software by. If not specified, filters only software for hosts with no team.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/software",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"setup_experience",
										"software"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "Team ID to filter software by. If not specified, filters only software for hosts with no team.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "{{page}}",
											"description": "Page number of the results to fetch.",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "{{per_page}}",
											"description": "Results per page.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_titles\": [ ... ],\n  \"count\": 2,\n  \"counts_updated_at\": \"2024-10-04T10:00:00Z\",\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Update software (setup experience)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"software_title_ids\": [23, 3411, 5032]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/software",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"software"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID to set the software for. If not specified, sets software for hosts with no team.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"software_title_ids\": [23, 3411, 5032]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/software",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"setup_experience",
										"software"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "Team ID to set the software for. If not specified, sets software for hosts with no team.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_title_ids\": [23, 3411, 5032]\n}"
						}
					]
				},
				{
					"name": "Add script (setup experience)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "team_id",
									"description": "Team ID to add the script to. If not specified, script will be added for hosts with no team.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "script",
									"value": "",
									"description": "The script file to upload.",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/script",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"script"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get or download script (setup experience)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/script",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"script"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID to get the script for. If not specified, script will be returned for hosts with no team.",
									"disabled": true
								},
								{
									"key": "alt",
									"value": "{{alt}}",
									"description": "If set to 'media', downloads the script's contents.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/script",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"setup_experience",
										"script"
									],
									"query": [
										{
											"key": "team_id",
											"value": "{{team_id}}",
											"description": "Team ID to get the script for. If not specified, script will be returned for hosts with no team.",
											"disabled": true
										},
										{
											"key": "alt",
											"value": "{{alt}}",
											"description": "If set to 'media', downloads the script's contents.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"team_id\": 3,\n  \"name\": \"setup-experience-script.sh\",\n  \"created_at\": \"2023-07-30T13:41:07Z\",\n  \"updated_at\": \"2023-07-30T13:41:07Z\"\n}"
						}
					]
				},
				{
					"name": "Delete script (setup experience)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/setup_experience/script",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"setup_experience",
								"script"
							],
							"query": [
								{
									"key": "team_id",
									"value": "{{team_id}}",
									"description": "Team ID to delete the script for. If not specified, script will be deleted for hosts with no team.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for managing macOS setup experience, enrollment profiles, bootstrap packages, EULA files, software, and scripts.\n\n[https://fleetdm.com/docs/rest-api/rest-api#setup-experience](https://fleetdm.com/docs/rest-api/rest-api#setup-experience)"
		},
		{
			"name": "Commands",
			"item": [
				{
					"name": "Run MDM command",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"command\": \"base64_encoded_mdm_command\",\n  \"host_uuids\": [\"host_uuid_1\", \"host_uuid_2\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/commands/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"commands",
								"run"
							]
						},
						"description": "This endpoint tells Fleet to run a custom MDM command, on the targeted macOS or Windows hosts, the next time they come online. Note that the EraseDevice and DeviceLock commands are available in Fleet Premium only."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"command\": \"base64_encoded_mdm_command\",\n  \"host_uuids\": [\"host_uuid_1\", \"host_uuid_2\"]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/commands/run",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"commands",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"command_uuid\": \"a2064cef-0000-1234-afb9-283e3c1d487e\",\n  \"request_type\": \"ProfileList\"\n}"
						}
					]
				},
				{
					"name": "Get MDM command results",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/commands/results?command_uuid=a2064cef-0000-1234-afb9-283e3c1d487e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"commands",
								"results"
							],
							"query": [
								{
									"key": "command_uuid",
									"value": "a2064cef-0000-1234-afb9-283e3c1d487e",
									"description": "The unique identifier of the command."
								}
							]
						},
						"description": "This endpoint returns the results for a specific custom MDM command. Possible status values for macOS, iOS, and iPadOS hosts: Pending, NotNow, Acknowledged, Error, CommandFormatError. For Windows hosts, see Microsoft's OMA DM documentation."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/commands/results?command_uuid=a2064cef-0000-1234-afb9-283e3c1d487e",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"commands",
										"results"
									],
									"query": [
										{
											"key": "command_uuid",
											"value": "a2064cef-0000-1234-afb9-283e3c1d487e"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"host_uuid\": \"145cafeb-87c7-4869-84d5-e4118a927746\",\n      \"command_uuid\": \"a2064cef-0000-1234-afb9-283e3c1d487e\",\n      \"status\": \"Acknowledged\",\n      \"updated_at\": \"2023-04-04:00:00Z\",\n      \"request_type\": \"ProfileList\",\n      \"hostname\": \"mycomputer\",\n      \"payload\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBwbGlzdCBQVUJMSUMgIi0vL0FwcGxlLy9EVEQgUExJU1QgMS4wLy9FTiIgImh0dHA6Ly93d3cuYXBwbGUuY29tL0RURHMvUHJvcGVydHlMaXN0LTEuMC5kdGQiPg0KPHBsaXN0IHZlcnNpb249IjEuMCI+DQo8ZGljdD4NCg0KCTxrZXk+UGF5bG9hZERlc2NyaXB0aW9uPC9rZXk+DQoJPHN0cmluZz5UaGlzIHByb2ZpbGUgY29uZmlndXJhdGlvbiBpcyBkZXNpZ25lZCB0byBhcHBseSB0aGUgQ0lTIEJlbmNobWFyayBmb3IgbWFjT1MgMTAuMTQgKHYyLjAuMCksIDEwLjE1ICh2Mi4wLjApLCAxMS4wICh2Mi4wLjApLCBhbmQgMTIuMCAodjEuMC4wKTwvc3RyaW5nPg0KCTxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+DQoJPHN0cmluZz5EaXNhYmxlIEJsdWV0b290aCBzaGFyaW5nPC9zdHJpbmc+DQoJPGtleT5QYXlsb2FkRW5hYmxlZDwva2V5Pg0KCTx0cnVlLz4NCgk8a2V5PlBheWxvYWRJZGVudGlmaWVyPC9rZXk+DQoJPHN0cmluZz5jaXMubWFjT1NCZW5jaG1hcmsuc2VjdGlvbjIuQmx1ZXRvb3RoU2hhcmluZzwvc3RyaW5nPg0KCTxrZXk+UGF5bG9hZFNjb3BlPC9rZXk+DQoJPHN0cmluZz5TeXN0ZW08L3N0cmluZz4NCgk8a2V5PlBheWxvYWRUeXBlPC9rZXk+DQoJPHN0cmluZz5Db25maWd1cmF0aW9uPC9zdHJpbmc+DQoJPGtleT5QYXlsb2FkVVVJRDwva2V5Pg0KCTxzdHJpbmc+NUNFQkQ3MTItMjhFQi00MzJCLTg0QzctQUEyOEE1QTM4M0Q4PC9zdHJpbmc+DQoJPGtleT5QYXlsb2FkVmVyc2lvbjwva2V5Pg0KCTxpbnRlZ2VyPjE8L2ludGVnZXI+DQogICAgPGtleT5QYXlsb2FkUmVtb3ZhbGREaXNhbGxvd2VkPC9rZXk+DQogICA8dHJ1ZS8+DQoJPGtleT5QYXlsb2FkQ29udGVudDwva2V5Pg0KCTxhcnJheT4NCgkJPGRpY3Q+DQoJCQk8a2V5PlBheWxvYWRDb250ZW50PC9rZXk+DQoJCQk8ZGljdD4NCgkJCQk8a2V5PmNvbS5hcHBsZS5CbHVldG9vdGg8L2tleT4NCgkJCQk8ZGljdD4NCgkJCQkJPGtleT5Gb3JjZWQ8L2tleT4NCgkJCQkJPGFycmF5Pg0KCQkJCQkJPGRpY3Q+DQoJCQkJCQkJPGtleT5tY3hfcHJlZmVyZW5jZV9zZXR0aW5nczwva2V5Pg0KCQkJCQkJCTxkaWN0Pg0KCQkJCQkJCQk8a2V5PlByZWZLZXlTZXJ2aWNlc0VuYWJsZWQ8L2tleT4NCgkJCQkJCQkJPGZhbHNlLz4NCgkJCQkJCQk8L2RpY3Q+DQoJCQkJCQk8L2RpY3Q+DQoJCQkJCTwvYXJyYXk+DQoJCQkJPC9kaWN0Pg0KCQkJPC9kaWN0Pg0KCQkJPGtleT5QYXlsb2FkRGVzY3JpcHRpb248L2tleT4NCgkJCTxzdHJpbmc+RGlzYWJsZXMgQmx1ZXRvb3RoIFNoYXJpbmc8L3N0cmluZz4NCgkJCTxrZXk+UGF5bG9hZERpc3BsYXlOYW1lPC9rZXk+DQoJCQk8c3RyaW5nPkN1c3RvbTwvc3RyaW5nPg0KCQkJPGtleT5QYXlsb2FkRW5hYmxlZDwva2V5Pg0KCQkJPHRydWUvPg0KCQkJPGtleT5QYXlsb2FkSWRlbnRpZmllcjwva2V5Pg0KCQkJPHN0cmluZz4wMjQwREQxQy03MERDLTQ3NjYtOTAxOC0wNDMyMkJGRUVBRDE8L3N0cmluZz4NCgkJCTxrZXk+UGF5bG9hZFR5cGU8L2tleT4NCgkJCTxzdHJpbmc+Y29tLmFwcGxlLk1hbmFnZWRDbGllbnQucHJlZmVyZW5jZXM8L3N0cmluZz4NCgkJCTxrZXk+UGF5bG9hZFVVSUQ8L2tleT4NCgkJCTxzdHJpbmc+MDI0MEREMUMtNzBEQy00NzY2LTkwMTgtMDQzMjJCRkVFQUQxPC9zdHJpbmc+DQoJCQk8a2V5PlBheWxvYWRWZXJzaW9uPC9rZXk+DQoJCQk8aW50ZWdlcj4xPC9pbnRlZ2VyPg0KCQk8L2RpY3Q+DQoJPC9hcnJheT4NCjwvZGljdD4NCjwvcGxpc3Q+\",\n      \"result\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjwhRE9DVFlQRSBwbGlzdCBQVUJMSUMgIi0vL0FwcGxlLy9EVEQgUExJU1QgMS4wLy9FTiIgImh0dHA6Ly93d3cuYXBwbGUuY29tL0RURHMvUHJvcGVydHlMaXN0LTEuMC5kdGQiPg0KPHBsaXN0IHZlcnNpb249IjEuMCI+DQo8ZGljdD4NCiAgICA8a2V5PkNvbW1hbmRVVUlEPC9rZXk+DQogICAgPHN0cmluZz4wMDAxX0luc3RhbGxQcm9maWxlPC9zdHJpbmc+DQogICAgPGtleT5TdGF0dXM8L2tleT4NCiAgICA8c3RyaW5nPkFja25vd2xlZGdlZDwvc3RyaW5nPg0KICAgIDxrZXk+VURJRDwva2V5Pg0KICAgIDxzdHJpbmc+MDAwMDgwMjAtMDAwOTE1MDgzQzgwMDEyRTwvc3RyaW5nPg0KPC9kaWN0Pg0KPC9wbGlzdD4=\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List MDM commands",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/commands",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"commands"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "5",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "updated_at",
									"description": "What to order results by. Can be any field listed in the results array example below.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "desc",
									"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\".",
									"disabled": true
								},
								{
									"key": "host_identifier",
									"value": "mycomputer",
									"description": "The host's hostname, uuid, or hardware_serial.",
									"disabled": true
								},
								{
									"key": "request_type",
									"value": "ProfileList",
									"description": "The request type to filter commands by.",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns the list of custom MDM commands that have been executed."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/commands?per_page=5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"commands"
									],
									"query": [
										{
											"key": "per_page",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"host_uuid\": \"145cafeb-87c7-4869-84d5-e4118a927746\",\n      \"command_uuid\": \"a2064cef-0000-1234-afb9-283e3c1d487e\",\n      \"status\": \"Acknowledged\",\n      \"updated_at\": \"2023-04-04:00:00Z\",\n      \"request_type\": \"ProfileList\",\n      \"hostname\": \"mycomputer\"\n    },\n    {\n      \"host_uuid\": \"322vghee-12c7-8976-83a1-e2118a927342\",\n      \"command_uuid\": \"d76d69b7-d806-45a9-8e49-9d6dc533485c\",\n      \"status\": \"200\",\n      \"updated_at\": \"2023-05-04:00:00Z\",\n      \"request_type\": \"./Device/Vendor/MSFT/Reboot/RebootNow\",\n      \"hostname\": \"myhost\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Endpoints for managing MDM commands and their results.\n\n[https://fleetdm.com/docs/rest-api/rest-api#commands](https://fleetdm.com/docs/rest-api/rest-api#commands)"
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "Get Apple Push Notification service (APNs)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/apns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"apns"
							]
						},
						"description": "Get information about the Apple Push Notification service (APNs) certificate."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/apns",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"apns"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"common_name\": \"APSP:04u52i98aewuh-xxxx-xxxx-xxxx-xxxx\",\n  \"serial_number\": \"1234567890987654321\",\n  \"issuer\": \"Apple Application Integration 2 Certification Authority\",\n  \"renew_date\": \"2023-09-30T00:00:00Z\"\n}"
						}
					]
				},
				{
					"name": "List Apple Business Manager (ABM) tokens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/abm_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"abm_tokens"
							]
						},
						"description": "List Apple Business Manager (ABM) tokens. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/abm_tokens",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"abm_tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"abm_tokens\": [\n    {\n      \"id\": 1,\n      \"apple_id\": \"admin@example.com\",\n      \"org_name\": \"Fleet Device Management Inc.\",\n      \"mdm_server_url\": \"https://example.com/mdm/apple/mdm\",\n      \"renew_date\": \"2023-11-29T00:00:00Z\",\n      \"terms_expired\": false,\n      \"macos_team\": {\n        \"name\": \"💻 Workstations\",\n        \"id\": 1\n      },\n      \"ios_team\": {\n        \"name\": \"📱🏢 Company-owned iPhones\",\n        \"id\": 2\n      },\n      \"ipados_team\": {\n        \"name\": \"🔳🏢 Company-owned iPads\",\n        \"id\": 3\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List Volume Purchasing Program (VPP) tokens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/vpp_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"vpp_tokens"
							]
						},
						"description": "List Volume Purchasing Program (VPP) tokens. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/vpp_tokens",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"vpp_tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"vpp_tokens\": [\n    {\n      \"id\": 1,\n      \"org_name\": \"Fleet Device Management Inc.\",\n      \"location\": \"https://example.com/mdm/apple/mdm\",\n      \"renew_date\": \"2023-11-29T00:00:00Z\",\n      \"teams\": [\n        {\n          \"name\": \"💻 Workstations\",\n          \"id\": 1\n        },\n        {\n          \"name\": \"💻🐣 Workstations (canary)\",\n          \"id\": 2\n        },\n        {\n          \"name\": \"📱🏢 Company-owned iPhones\",\n          \"id\": 3\n        },\n        {\n          \"name\": \"🔳🏢 Company-owned iPads\",\n          \"id\": 4\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get identity provider (IdP) details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scim/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scim",
								"details"
							]
						},
						"description": "Get details about SCIM (System for Cross-domain Identity Management) integration with your identity provider (IdP)."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scim/details",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scim",
										"details"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"last_request\": {\n    \"requested_at\": \"2025-03-11T02:02:17Z\",\n    \"status\": \"success\",\n    \"details\": \"\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get Android Enterprise",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/android_enterprise",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"android_enterprise"
							]
						},
						"description": "Get info about Android Enterprise that's connected to Fleet. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/android_enterprise",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"android_enterprise"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"android_enterprise_id\": \"LC0445szuv\"\n}"
						}
					]
				}
			],
			"description": "Endpoints for managing various integrations including Apple services, identity providers, and Android Enterprise.\n\n[https://fleetdm.com/docs/rest-api/rest-api#integrations2](https://fleetdm.com/docs/rest-api/rest-api#integrations2)"
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "List policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Results per page.",
									"disabled": true
								}
							]
						},
						"description": "List all global policies."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/policies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policies\": [\n    {\n      \"id\": 1,\n      \"name\": \"Gatekeeper enabled\",\n      \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n      \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n      \"critical\": false,\n      \"author_id\": 42,\n      \"author_name\": \"John\",\n      \"author_email\": \"john@example.com\",\n      \"team_id\": null,\n      \"resolution\": \"Resolution steps\",\n      \"platform\": \"darwin\",\n      \"created_at\": \"2021-12-15T15:23:57Z\",\n      \"updated_at\": \"2021-12-15T15:23:57Z\",\n      \"passing_host_count\": 2000,\n      \"failing_host_count\": 300,\n      \"host_count_updated_at\": \"2023-12-20T15:23:57Z\",\n      \"labels_include_any\": [\"Macs on Sonoma\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Windows machines with encrypted hard disks\",\n      \"query\": \"SELECT 1 FROM bitlocker_info WHERE protection_status = 1;\",\n      \"description\": \"Checks if the hard disk is encrypted on Windows devices\",\n      \"critical\": true,\n      \"author_id\": 43,\n      \"author_name\": \"Alice\",\n      \"author_email\": \"alice@example.com\",\n      \"team_id\": null,\n      \"resolution\": \"Resolution steps\",\n      \"platform\": \"windows\",\n      \"created_at\": \"2021-12-31T14:52:27Z\",\n      \"updated_at\": \"2022-02-10T20:59:35Z\",\n      \"passing_host_count\": 2300,\n      \"failing_host_count\": 0,\n      \"host_count_updated_at\": \"2023-12-20T15:23:57Z\",\n      \"labels_exclude_any\": [\"Compliance exclusions\", \"Workstations (Canary)\"]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List team policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"policies"
							],
							"query": [
								{
									"key": "merge_inherited",
									"value": "false",
									"description": "If true, will return both team policies and inherited (\"All teams\") policies in the policies list, and will not return a separate inherited_policies list.",
									"disabled": true
								},
								{
									"key": "query",
									"value": "gatekeeper",
									"description": "Search query keywords. Searchable fields include name.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "10",
									"description": "Results per page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "List team policies. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/1/policies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"1",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policies\": [\n    {\n      \"id\": 1,\n      \"name\": \"Gatekeeper enabled\",\n      \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n      \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n      \"critical\": true,\n      \"author_id\": 42,\n      \"author_name\": \"John\",\n      \"author_email\": \"john@example.com\",\n      \"team_id\": 1,\n      \"resolution\": \"Resolution steps\",\n      \"platform\": \"darwin\",\n      \"created_at\": \"2021-12-16T14:37:37Z\",\n      \"updated_at\": \"2021-12-16T16:39:00Z\",\n      \"passing_host_count\": 2000,\n      \"failing_host_count\": 300,\n      \"host_count_updated_at\": \"2023-12-20T15:23:57Z\",\n      \"calendar_events_enabled\": true,\n      \"conditional_access_enabled\": true,\n      \"fleet_maintained\": false,\n      \"labels_include_any\": [\"Macs on Sonoma\"]\n    }\n  ],\n  \"inherited_policies\": [\n    {\n      \"id\": 136,\n      \"name\": \"Arbitrary Test Policy (all platforms) (all teams)\",\n      \"query\": \"SELECT 1 FROM osquery_info WHERE 1=1;\",\n      \"description\": \"If you're seeing this, mostly likely this is because someone is testing out failing policies in dogfood. You can ignore this.\",\n      \"critical\": true,\n      \"author_id\": 77,\n      \"author_name\": \"Test Admin\",\n      \"author_email\": \"test@example.com\",\n      \"team_id\": null,\n      \"resolution\": \"To make it pass, change \\\"1=0\\\" to \\\"1=1\\\". To make it fail, change \\\"1=1\\\" to \\\"1=0\\\".\",\n      \"platform\": \"darwin,windows,linux\",\n      \"created_at\": \"2022-08-04T19:30:18Z\",\n      \"updated_at\": \"2022-08-30T15:08:26Z\",\n      \"passing_host_count\": 10,\n      \"failing_host_count\": 9,\n      \"host_count_updated_at\": \"2023-12-20T15:23:57Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Count policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/policies/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"policies",
								"count"
							],
							"query": [
								{
									"key": "query",
									"value": "gatekeeper",
									"description": "Search query keywords. Searchable fields include name.",
									"disabled": true
								}
							]
						},
						"description": "Count global policies."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/policies/count",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"policies",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 43\n}"
						}
					]
				},
				{
					"name": "Count team policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/team/:team_id/policies/count",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"team",
								":team_id",
								"policies",
								"count"
							],
							"query": [
								{
									"key": "query",
									"value": "gatekeeper",
									"description": "Search query keywords. Searchable fields include name.",
									"disabled": true
								},
								{
									"key": "merge_inherited",
									"value": "true",
									"description": "If true, will include inherited (\"All teams\") policies in the count.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						},
						"description": "Count team policies. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/team/1/policies/count",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"team",
										"1",
										"policies",
										"count"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 43\n}"
						}
					]
				},
				{
					"name": "Get policy by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/policies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"policies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Get a specific global policy by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/policies/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"policies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 1,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": false,\n    \"author_id\": 42,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"team_id\": null,\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"created_at\": \"2021-12-15T15:23:57Z\",\n    \"updated_at\": \"2021-12-15T15:23:57Z\",\n    \"passing_host_count\": 2000,\n    \"failing_host_count\": 300,\n    \"host_count_updated_at\": \"2023-12-20T15:23:57Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get team policy by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/policies/:policy_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"policies",
								":policy_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								},
								{
									"key": "policy_id",
									"value": ""
								}
							]
						},
						"description": "Get a specific team policy by ID. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/1/policies/43",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"1",
										"policies",
										"43"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 43,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": true,\n    \"author_id\": 42,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"team_id\": 1,\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"created_at\": \"2021-12-16T14:37:37Z\",\n    \"updated_at\": \"2021-12-16T16:39:00Z\",\n    \"passing_host_count\": 0,\n    \"failing_host_count\": 0,\n    \"host_count_updated_at\": null,\n    \"calendar_events_enabled\": true,\n    \"conditional_access_enabled\": false,\n    \"fleet_maintained\": false,\n    \"labels_include_any\": [\"Macs on Sonoma\"],\n    \"install_software\": {\n      \"name\": \"Adobe Acrobat.app\",\n      \"software_title_id\": 1234\n    },\n    \"run_script\": {\n      \"name\": \"Enable gatekeeper\",\n      \"id\": 1337\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Add policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"critical\": true,\n  //\"labels_include_any\": [\"label1\", \"label2\"],\n  \"labels_exclude_any\": [\"label1\", \"label2\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"policies"
							]
						},
						"description": "Create a new global policy."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"critical\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/policies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 43,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": true,\n    \"author_id\": 42,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"team_id\": null,\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"created_at\": \"2022-03-17T20:15:55Z\",\n    \"updated_at\": \"2022-03-17T20:15:55Z\",\n    \"passing_host_count\": 0,\n    \"failing_host_count\": 0,\n    \"host_count_updated_at\": null,\n    \"labels_include_any\": [\"Macs on Sonoma\"]\n  }\n}"
						}
					]
				},
				{
					"name": "Add team policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"critical\": true,\n  \"software_title_id\": 1,\n  \"script_id\": 1,\n//\"labels_include_any\": [\"label1\", \"label2\"],\n  \"labels_exclude_any\": [\"label1\", \"label2\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/policies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"policies"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Create a new team policy. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"critical\": true,\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/1/policies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"1",
										"policies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 43,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": true,\n    \"author_id\": 42,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"team_id\": 1,\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"created_at\": \"2021-12-16T14:37:37Z\",\n    \"updated_at\": \"2021-12-16T16:39:00Z\",\n    \"passing_host_count\": 0,\n    \"failing_host_count\": 0,\n    \"host_count_updated_at\": null,\n    \"calendar_events_enabled\": false,\n    \"fleet_maintained\": false,\n    \"labels_include_any\": [\"Macs on Sonoma\"],\n    \"install_software\": {\n      \"name\": \"Adobe Acrobat.app\",\n      \"software_title_id\": 1234\n    },\n    \"run_script\": {\n      \"name\": \"Enable gatekeeper\",\n      \"id\": 1337\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Delete policies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [1]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/policies/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"policies",
								"delete"
							]
						},
						"description": "Delete global policies by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [1]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/policies/delete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"policies",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"deleted\": 1\n}"
						}
					]
				},
				{
					"name": "Delete team policies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [1]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/policies/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"policies",
								"delete"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								}
							]
						},
						"description": "Delete team policies by ID. Available in Fleet Premium."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [1]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/1/policies/delete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"1",
										"policies",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"deleted\": 1\n}"
						}
					]
				},
				{
					"name": "Edit team policy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"critical\": true,\n  \"calendar_events_enabled\": true,\n  \"conditional_access_enabled\": true,\n  \"software_title_id\": 1337,\n  \"script_id\": 1337,\n//\"labels_include_any\": [\"label1\", \"label2\"],\n  \"labels_exclude_any\": [\"label1\", \"label2\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/policies/:policy_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"policies",
								":policy_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								},
								{
									"key": "policy_id",
									"value": ""
								}
							]
						},
						"description": "Edit a team policy by ID. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"critical\": true,\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"script_id\": 1337\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/2/policies/42",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"2",
										"policies",
										"42"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 42,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": true,\n    \"author_id\": 43,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"team_id\": 2,\n    \"created_at\": \"2021-12-16T14:37:37Z\",\n    \"updated_at\": \"2021-12-16T16:39:00Z\",\n    \"passing_host_count\": 0,\n    \"failing_host_count\": 0,\n    \"host_count_updated_at\": null,\n    \"calendar_events_enabled\": true,\n    \"conditional_access_enabled\": false,\n    \"fleet_maintained\": false,\n    \"install_software\": {\n      \"name\": \"Adobe Acrobat.app\",\n      \"software_title_id\": 1234\n    },\n    \"run_script\": {\n      \"name\": \"Enable gatekeeper\",\n      \"id\": 1337\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Edit policy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\",\n  \"critical\": true,\n//\"labels_include_any\": [\"label1\", \"label2\"],\n  \"labels_exclude_any\": [\"label1\", \"label2\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/policies/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"policies",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Edit a global policy by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Gatekeeper enabled\",\n  \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n  \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n  \"critical\": true,\n  \"resolution\": \"Resolution steps\",\n  \"platform\": \"darwin\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/policies/42",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"policies",
										"42"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"policy\": {\n    \"id\": 42,\n    \"name\": \"Gatekeeper enabled\",\n    \"query\": \"SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;\",\n    \"description\": \"Checks if gatekeeper is enabled on macOS devices\",\n    \"critical\": true,\n    \"author_id\": 43,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"team_id\": null,\n    \"resolution\": \"Resolution steps\",\n    \"platform\": \"darwin\",\n    \"created_at\": \"2022-03-17T20:15:55Z\",\n    \"updated_at\": \"2022-03-17T20:15:55Z\",\n    \"passing_host_count\": 0,\n    \"failing_host_count\": 0,\n    \"host_count_updated_at\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Reset automations for all hosts failing policies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_ids\": [1, 2, 3],\n  \"team_ids\": [1]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/automations/reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"automations",
								"reset"
							]
						},
						"description": "Resets automation status for all hosts failing the specified policies. Currently, this API endpoint only resets ticket and webhook automations."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"team_ids\": [1],\n  \"policy_ids\": [1, 2, 3]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/automations/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"automations",
										"reset"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "Endpoints for managing policies in Fleet. Policies are yes or no questions you can ask about your hosts, defined by osquery queries.\n\n[https://fleetdm.com/docs/rest-api/rest-api#policies](https://fleetdm.com/docs/rest-api/rest-api#policies)"
		},
		{
			"name": "Queries",
			"item": [
				{
					"name": "List queries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries"
							],
							"query": [
								{
									"key": "order_key",
									"value": "name",
									"description": "What to order results by. Can be any column in the queries table.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "The direction of the order given the order key. Options include 'asc' and 'desc'. Default is 'asc'.",
									"disabled": true
								},
								{
									"key": "team_id",
									"value": "1",
									"description": "Available in Fleet Premium. The ID of the parent team for the queries to be listed. When omitted, returns global queries.",
									"disabled": true
								},
								{
									"key": "query",
									"value": "test",
									"description": "Search query keywords. Searchable fields include name.",
									"disabled": true
								},
								{
									"key": "merge_inherited",
									"value": "true",
									"description": "Available in Fleet Premium. If true, will include global queries in addition to team queries when filtering by team_id.",
									"disabled": true
								},
								{
									"key": "platform",
									"value": "macos",
									"description": "Return queries that are scheduled to run on this platform. One of: 'macos', 'windows', 'linux' (case-insensitive).",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "50",
									"description": "Results per page.",
									"disabled": true
								}
							]
						},
						"description": "Returns a list of global queries or team queries."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"queries\": [\n    {\n      \"created_at\": \"2021-01-04T21:19:57Z\",\n      \"updated_at\": \"2021-01-04T21:19:57Z\",\n      \"id\": 1,\n      \"name\": \"query1\",\n      \"description\": \"query\",\n      \"query\": \"SELECT * FROM osquery_info\",\n      \"team_id\": null,\n      \"interval\": 3600,\n      \"platform\": \"darwin,windows,linux\",\n      \"min_osquery_version\": \"\",\n      \"automations_enabled\": true,\n      \"logging\": \"snapshot\",\n      \"saved\": true,\n      \"observer_can_run\": true,\n      \"discard_data\": false,\n      \"author_id\": 1,\n      \"author_name\": \"noah\",\n      \"author_email\": \"noah@example.com\",\n      \"labels_include_any\": [],\n      \"packs\": [\n        {\n          \"created_at\": \"2021-01-05T21:13:04Z\",\n          \"updated_at\": \"2021-01-07T19:12:54Z\",\n          \"id\": 1,\n          \"name\": \"Pack\",\n          \"description\": \"Pack\",\n          \"platform\": \"\",\n          \"disabled\": true\n        }\n      ],\n      \"stats\": {\n        \"system_time_p50\": 1.32,\n        \"system_time_p95\": 4.02,\n        \"user_time_p50\": 3.55,\n        \"user_time_p95\": 3.00,\n        \"total_executions\": 3920\n      }\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": true,\n    \"has_previous_results\": false\n  },\n  \"count\": 200\n}"
						}
					]
				},
				{
					"name": "Get query",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns the query specified by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/31",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"31"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query\": {\n    \"created_at\": \"2021-01-19T17:08:24Z\",\n    \"updated_at\": \"2021-01-19T17:08:24Z\",\n    \"id\": 31,\n    \"name\": \"centos_hosts\",\n    \"description\": \"\",\n    \"query\": \"select 1 from os_version where platform = \\\"centos\\\";\",\n    \"team_id\": null,\n    \"interval\": 3600,\n    \"platform\": \"\",\n    \"min_osquery_version\": \"\",\n    \"automations_enabled\": true,\n    \"logging\": \"snapshot\",\n    \"saved\": true,\n    \"observer_can_run\": true,\n    \"discard_data\": false,\n    \"author_id\": 1,\n    \"author_name\": \"John\",\n    \"author_email\": \"john@example.com\",\n    \"labels_include_any\": [],\n    \"packs\": [\n      {\n        \"created_at\": \"2021-01-19T17:08:31Z\",\n        \"updated_at\": \"2021-01-19T17:08:31Z\",\n        \"id\": 14,\n        \"name\": \"test_pack\",\n        \"description\": \"\",\n        \"platform\": \"\",\n        \"disabled\": false\n      }\n    ],\n    \"stats\": {\n      \"system_time_p50\": 1.32,\n      \"system_time_p95\": 4.02,\n      \"user_time_p50\": 3.55,\n      \"user_time_p95\": 3.00,\n      \"total_executions\": 3920\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Get query report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/:id/report",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								":id",
								"report"
							],
							"query": [
								{
									"key": "team_id",
									"value": "1",
									"description": "Filter the query report to only include hosts that are associated with the team specified",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns the query report specified by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/31/report",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"31",
										"report"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query_id\": 31,\n  \"report_clipped\": false,\n  \"results\": [\n    {\n      \"host_id\": 1,\n      \"host_name\": \"foo\",\n      \"last_fetched\": \"2021-01-19T17:08:31Z\",\n      \"columns\": {\n        \"model\": \"USB 2.0 Hub\",\n        \"vendor\": \"VIA Labs, Inc.\"\n      }\n    },\n    {\n      \"host_id\": 1,\n      \"host_name\": \"foo\",\n      \"last_fetched\": \"2021-01-19T17:08:31Z\",\n      \"columns\": {\n        \"model\": \"USB Keyboard\",\n        \"vendor\": \"VIA Labs, Inc.\"\n      }\n    },\n    {\n      \"host_id\": 2,\n      \"host_name\": \"bar\",\n      \"last_fetched\": \"2021-01-19T17:20:00Z\",\n      \"columns\": {\n        \"model\": \"USB Reciever\",\n        \"vendor\": \"Logitech\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get query report for one host",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/queries/:query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"queries",
								":query_id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "query_id",
									"value": ""
								}
							]
						},
						"description": "Returns a query report for a single host."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/hosts/123/queries/31",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"hosts",
										"123",
										"queries",
										"31"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query_id\": 31,\n  \"host_id\": 1,\n  \"host_name\": \"foo\",\n  \"last_fetched\": \"2021-01-19T17:08:31Z\",\n  \"report_clipped\": false,\n  \"results\": [\n    {\n      \"columns\": {\n        \"model\": \"USB 2.0 Hub\",\n        \"vendor\": \"VIA Labs, Inc.\"\n      }\n    },\n    {\n      \"columns\": {\n        \"model\": \"USB Keyboard\",\n        \"vendor\": \"VIA Labs, Inc.\"\n      }\n    },\n    {\n      \"columns\": {\n        \"model\": \"USB Reciever\",\n        \"vendor\": \"Logitech\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"new_query\",\n  \"query\": \"SELECT * FROM osquery_info\",\n  \"description\": \"This is a new query.\",\n  \"observer_can_run\": true,\n  \"team_id\": 1,\n  \"interval\": 3600,\n  \"platform\": \"darwin,windows,linux\",\n  \"labels_include_any\": [\n    \"Hosts with Docker installed\"\n  ],\n  \"min_osquery_version\": \"\",\n  \"automations_enabled\": true,\n  \"logging\": \"snapshot\",\n  \"discard_data\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries"
							]
						},
						"description": "Creates a global query or team query."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"new_query\",\n  \"description\": \"This is a new query.\",\n  \"query\": \"SELECT * FROM osquery_info\",\n  \"interval\": 3600,\n  \"platform\": \"darwin,windows,linux\",\n  \"min_osquery_version\": \"\",\n  \"automations_enabled\": true,\n  \"logging\": \"snapshot\",\n  \"discard_data\": false,\n  \"observer_can_run\": true,\n  \"team_id\": 1,\n  \"labels_include_any\": [\n    \"Hosts with Docker installed\"\n  ]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 288,\n    \"name\": \"new_query\",\n    \"query\": \"SELECT * FROM osquery_info\",\n    \"description\": \"This is a new query.\",\n    \"team_id\": 1,\n    \"interval\": 3600,\n    \"platform\": \"darwin,windows,linux\",\n    \"min_osquery_version\": \"\",\n    \"automations_enabled\": true,\n    \"logging\": \"snapshot\",\n    \"saved\": true,\n    \"author_id\": 1,\n    \"author_name\": \"\",\n    \"author_email\": \"\",\n    \"observer_can_run\": true,\n    \"discard_data\": false,\n    \"packs\": [],\n    \"labels_include_any\": [\n      \"Hosts with Docker installed\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Modify query",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"new_title_for_my_query\",\n  \"query\": \"\",\n  \"description\": \"\",\n  \"observer_can_run\": true,\n  \"interval\": 3600,\n  \"platform\": \"\",\n  \"labels_include_any\": [\n    \"Hosts with Docker installed\",\n    \"macOS 13+\"\n  ],\n  \"min_osquery_version\": \"\",\n  \"automations_enabled\": false,\n  \"logging\": \"\",\n  \"discard_data\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Modifies the query specified by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"new_title_for_my_query\",\n  \"interval\": 3600,\n  \"platform\": \"\",\n  \"min_osquery_version\": \"\",\n  \"automations_enabled\": false,\n  \"discard_data\": true,\n  \"labels_include_any\": [\n    \"Hosts with Docker installed\",\n    \"macOS 13+\"\n  ]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query\": {\n    \"created_at\": \"2021-01-22T17:23:27Z\",\n    \"updated_at\": \"2021-01-22T17:23:27Z\",\n    \"id\": 288,\n    \"name\": \"new_title_for_my_query\",\n    \"description\": \"This is a new query.\",\n    \"query\": \"SELECT * FROM osquery_info\",\n    \"team_id\": null,\n    \"interval\": 3600,\n    \"platform\": \"\",\n    \"min_osquery_version\": \"\",\n    \"automations_enabled\": false,\n    \"logging\": \"snapshot\",\n    \"saved\": true,\n    \"author_id\": 1,\n    \"author_name\": \"noah\",\n    \"observer_can_run\": true,\n    \"discard_data\": true,\n    \"packs\": [],\n    \"labels_include_any\": [\n      \"Hosts with Docker installed\",\n      \"macOS 13+\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Delete query by name",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"team_id\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": ""
								}
							]
						},
						"description": "Deletes the query specified by name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"team_id\": 1\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/foo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"foo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete query by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/id/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								"id",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Deletes the query specified by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/id/28",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"id",
										"28"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete queries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    2, 24, 25\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								"delete"
							]
						},
						"description": "Deletes the queries specified by ID. Returns the count of queries successfully deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    2, 24, 25\n  ]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/delete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"deleted\": 3\n}"
						}
					]
				},
				{
					"name": "Run live query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"host_ids\": [ 1, 4, 34, 27 ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/queries/:id/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"queries",
								":id",
								"run"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Runs a live query against the specified hosts and responds with the results. This updated API endpoint replaced GET /api/v1/fleet/queries/run in Fleet 4.43.0, for improved compatibility with many HTTP clients."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host_ids\": [ 1, 4, 34, 27 ]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/queries/123/run",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"queries",
										"123",
										"run"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"query_id\": 123,\n  \"targeted_host_count\": 4,\n  \"responded_host_count\": 2,\n  \"results\": [\n    {\n      \"host_id\": 1,\n      \"rows\": [\n        {\n          \"build_distro\": \"10.12\",\n          \"build_platform\": \"darwin\",\n          \"config_hash\": \"7bb99fa2c8a998c9459ec71da3a84d66c592d6d3\",\n          \"config_valid\": \"1\",\n          \"extensions\": \"active\",\n          \"instance_id\": \"9a2ec7bf-4946-46ea-93bf-455e0bcbd068\",\n          \"pid\": \"23413\",\n          \"platform_mask\": \"21\",\n          \"start_time\": \"1635194306\",\n          \"uuid\": \"4C182AC7-75F7-5AF4-A74B-1E165ED35742\",\n          \"version\": \"4.9.0\",\n          \"watcher\": \"23412\"\n        }\n      ],\n      \"error\": null\n    },\n    {\n      \"host_id\": 2,\n      \"rows\": [],\n      \"error\": \"no such table: os_version\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Endpoints for managing queries.\n\n[https://fleetdm.com/docs/rest-api/rest-api#queries](https://fleetdm.com/docs/rest-api/rest-api#queries)"
		},
		{
			"name": "Schedule (Deprecated)",
			"item": [
				{
					"name": "Get schedule (deprecated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"schedule"
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"global_schedule\": [\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 4,\n      \"pack_id\": 1,\n      \"name\": \"arp_cache\",\n      \"query_id\": 2,\n      \"query_name\": \"arp_cache\",\n      \"query\": \"select * from arp_cache;\",\n      \"interval\": 120,\n      \"snapshot\": true,\n      \"removed\": null,\n      \"platform\": \"\",\n      \"version\": \"\",\n      \"shard\": null,\n      \"denylist\": null,\n      \"stats\": {\n        \"system_time_p50\": 1.32,\n        \"system_time_p95\": 4.02,\n        \"user_time_p50\": 3.55,\n        \"user_time_p95\": 3.00,\n        \"total_executions\": 3920\n      }\n    },\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 5,\n      \"pack_id\": 1,\n      \"name\": \"disk_encryption\",\n      \"query_id\": 7,\n      \"query_name\": \"disk_encryption\",\n      \"query\": \"select * from disk_encryption;\",\n      \"interval\": 86400,\n      \"snapshot\": true,\n      \"removed\": null,\n      \"platform\": \"\",\n      \"version\": \"\",\n      \"shard\": null,\n      \"denylist\": null,\n      \"stats\": {\n        \"system_time_p50\": 1.32,\n        \"system_time_p95\": 4.02,\n        \"user_time_p50\": 3.55,\n        \"user_time_p95\": 3.00,\n        \"total_executions\": 3920\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add query to schedule (deprecated)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query_id\": 2,\n  \"interval\": 86400,\n  \"snapshot\": true,\n  \"removed\": null,\n  \"platform\": \"\",\n  \"shard\": null,\n  \"version\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"schedule"
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interval\": 86400,\n  \"query_id\": 2,\n  \"snapshot\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scheduled\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 1,\n    \"pack_id\": 5,\n    \"name\": \"arp_cache\",\n    \"query_id\": 2,\n    \"query_name\": \"arp_cache\",\n    \"query\": \"select * from arp_cache;\",\n    \"interval\": 86400,\n    \"snapshot\": true,\n    \"removed\": null,\n    \"platform\": \"\",\n    \"version\": \"\",\n    \"shard\": null,\n    \"denylist\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Edit query in schedule (deprecated)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"interval\": 604800,\n  \"snapshot\": true,\n  \"removed\": null,\n  \"platform\": \"\",\n  \"shard\": null,\n  \"version\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/schedule/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"schedule",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interval\": 604800\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/schedule/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"schedule",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scheduled\": {\n    \"created_at\": \"2021-07-16T14:40:15Z\",\n    \"updated_at\": \"2021-07-16T14:40:15Z\",\n    \"id\": 5,\n    \"pack_id\": 1,\n    \"name\": \"arp_cache\",\n    \"query_id\": 2,\n    \"query_name\": \"arp_cache\",\n    \"query\": \"select * from arp_cache;\",\n    \"interval\": 604800,\n    \"snapshot\": true,\n    \"removed\": null,\n    \"platform\": \"\",\n    \"shard\": null,\n    \"denylist\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Remove query from schedule (deprecated)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/global/schedule/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"global",
								"schedule",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/global/schedule/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"global",
										"schedule",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get team schedule (deprecated)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"schedule"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "50",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "name",
									"description": "What to order results by. Can be any column in the activities table.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "The direction of the order given the order key. Options include 'asc' and 'desc'. Default is 'asc'.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/2/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"2",
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scheduled\": [\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 4,\n      \"pack_id\": 2,\n      \"name\": \"arp_cache\",\n      \"query_id\": 2,\n      \"query_name\": \"arp_cache\",\n      \"query\": \"select * from arp_cache;\",\n      \"interval\": 120,\n      \"snapshot\": true,\n      \"platform\": \"\",\n      \"version\": \"\",\n      \"removed\": null,\n      \"shard\": null,\n      \"denylist\": null,\n      \"stats\": {\n        \"system_time_p50\": 1.32,\n        \"system_time_p95\": 4.02,\n        \"user_time_p50\": 3.55,\n        \"user_time_p95\": 3.00,\n        \"total_executions\": 3920\n      }\n    },\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 5,\n      \"pack_id\": 3,\n      \"name\": \"disk_encryption\",\n      \"query_id\": 7,\n      \"query_name\": \"disk_encryption\",\n      \"query\": \"select * from disk_encryption;\",\n      \"interval\": 86400,\n      \"snapshot\": true,\n      \"removed\": null,\n      \"platform\": \"\",\n      \"version\": \"\",\n      \"shard\": null,\n      \"denylist\": null,\n      \"stats\": {\n        \"system_time_p50\": 1.32,\n        \"system_time_p95\": 4.02,\n        \"user_time_p50\": 3.55,\n        \"user_time_p95\": 3.00,\n        \"total_executions\": 3920\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add query to team schedule (deprecated)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"interval\": 86400,\n  \"query_id\": 2,\n  \"snapshot\": true,\n  \"removed\": null,\n  \"platform\": \"\",\n  \"shard\": null,\n  \"version\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/schedule",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"schedule"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interval\": 86400,\n  \"query_id\": 2,\n  \"snapshot\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/2/schedule",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"2",
										"schedule"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scheduled\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 1,\n    \"pack_id\": 5,\n    \"name\": \"arp_cache\",\n    \"query_id\": 2,\n    \"query_name\": \"arp_cache\",\n    \"query\": \"select * from arp_cache;\",\n    \"interval\": 86400,\n    \"snapshot\": true,\n    \"removed\": null,\n    \"shard\": null,\n    \"denylist\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Edit query in team schedule (deprecated)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"interval\": 604800,\n  \"snapshot\": true,\n  \"removed\": null,\n  \"platform\": \"\",\n  \"shard\": null,\n  \"version\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/schedule/:scheduled_query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"schedule",
								":scheduled_query_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								},
								{
									"key": "scheduled_query_id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"interval\": 604800\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/2/schedule/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"2",
										"schedule",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scheduled\": {\n    \"created_at\": \"2021-07-16T14:40:15Z\",\n    \"updated_at\": \"2021-07-16T14:40:15Z\",\n    \"id\": 5,\n    \"pack_id\": 1,\n    \"name\": \"arp_cache\",\n    \"query_id\": 2,\n    \"query_name\": \"arp_cache\",\n    \"query\": \"select * from arp_cache;\",\n    \"interval\": 604800,\n    \"snapshot\": true,\n    \"removed\": null,\n    \"platform\": \"\",\n    \"shard\": null,\n    \"denylist\": null\n  }\n}"
						}
					]
				},
				{
					"name": "Remove query from team schedule (deprecated)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:team_id/schedule/:scheduled_query_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":team_id",
								"schedule",
								":scheduled_query_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": ""
								},
								{
									"key": "scheduled_query_id",
									"value": ""
								}
							]
						},
						"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the queries endpoints, which as of 4.35 have attributes such as interval and platform that enable scheduling."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/teams/2/schedule/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										"2",
										"schedule",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "The schedule API endpoints are deprecated as of Fleet 4.35. They are maintained for backwards compatibility. Please use the [queries](https://fleetdm.com/docs/rest-api/rest-api#queries) endpoints, which as of 4.35 have attributes such as `interval` and `platform` that enable scheduling.\n\n[https://fleetdm.com/docs/rest-api/rest-api#schedule](https://fleetdm.com/docs/rest-api/rest-api#schedule)"
		},
		{
			"name": "Scripts",
			"item": [
				{
					"name": "Run script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"host_id\": 1227,\n  \"script_id\": 123\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								"run"
							]
						},
						"description": "Run a script on a host. The script will be added to the host's list of upcoming activities. The new script will run after other activities finish. Failure of one activity won't cancel other activities. By default, script runs time out after 5 minutes."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"host_id\": 1227,\n  \"script_id\": 123\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/run",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"run"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"host_id\": 1227,\n  \"execution_id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\"\n}"
						}
					]
				},
				{
					"name": "Get script result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/results/:execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								"results",
								":execution_id"
							],
							"variable": [
								{
									"key": "execution_id",
									"value": ""
								}
							]
						},
						"description": "Gets the result of a script that was executed."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/results/e797d6c6-3aae-11ee-be56-0242ac120002",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"results",
										"e797d6c6-3aae-11ee-be56-0242ac120002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"script_contents\": \"echo 'hello'\",\n  \"exit_code\": 0,\n  \"output\": \"hello\",\n  \"message\": \"\",\n  \"hostname\": \"Test Host\",\n  \"host_timeout\": false,\n  \"host_id\": 1,\n  \"execution_id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\",\n  \"runtime\": 20,\n  \"created_at\": \"2024-09-11T20:30:24Z\"\n}"
						}
					]
				},
				{
					"name": "Batch-run script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"script_id\": 123,\n  \"host_ids\": [1, 2, 3],\n  \"filters\": {\n    \"query\": \"\", // (hostname, hardware_serial, uuid, ipv4)\n    \"status\": \"\", // (new, online, offline, mia, missing)\n    \"label_id\": 1,\n    \"team_id\": 1\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/run/batch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								"run",
								"batch"
							]
						},
						"description": "Run a script on multiple hosts. The script will be added to each host's list of upcoming activities."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"script_id\": 123,\n  \"host_ids\": [1, 2, 3]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/run/batch",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"run",
										"batch"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"batch_execution_id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\"\n}"
						}
					]
				},
				{
					"name": "Get batch script summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/batch/summary/:batch_execution_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								"batch",
								"summary",
								":batch_execution_id"
							],
							"variable": [
								{
									"key": "batch_execution_id",
									"value": ""
								}
							]
						},
						"description": "Get statuses and host counts for a batch-run script."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/batch/summary/e797d6c6-3aae-11ee-be56-0242ac120002",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"batch",
										"summary",
										"e797d6c6-3aae-11ee-be56-0242ac120002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"ran\": 12345,\n  \"pending\": 234,\n  \"errored\": 18,\n  \"canceled\": 2,\n  \"targeted\": 12599,\n  \"script_id\": 555,\n  \"script_name\": \"my-script.sh\",\n  \"team_id\": 123\n}"
						}
					]
				},
				{
					"name": "Add script",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data; boundary=------------------------f02md47480und42y",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "team_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "script",
									"type": "file",
									"src": "myscript.sh"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts"
							]
						},
						"description": "Uploads a script, making it available to run on hosts assigned to the specified team (or no team). Script line endings are automatically converted from CRLF to LF for compatibility with both non-Windows shells and PowerShell."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=------------------------f02md47480und42y",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "team_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "script",
											"type": "file",
											"src": "myscript.sh"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"script_id\": 1227\n}"
						}
					]
				},
				{
					"name": "Modify script",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data; boundary=------------------------f02md47480und42y",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "script",
									"type": "file",
									"src": "myscript.sh"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Modifies an existing script."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data; boundary=------------------------f02md47480und42y",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "script",
											"type": "file",
											"src": "myscript.sh"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"team_id\": null,\n  \"name\": \"script_1.sh\",\n  \"created_at\": \"2023-07-30T13:41:07Z\",\n  \"updated_at\": \"2023-07-30T13:41:07Z\"\n}"
						}
					]
				},
				{
					"name": "Delete script",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Deletes an existing script."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"1"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List scripts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts"
							],
							"query": [
								{
									"key": "team_id",
									"value": "1",
									"description": "Available in Fleet Premium. The ID of the team to filter scripts by. If not specified, it will filter only scripts that are available to hosts with no team.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "50",
									"description": "Results per page.",
									"disabled": true
								}
							]
						},
						"description": "List all scripts available in Fleet."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scripts\": [\n    {\n      \"id\": 1,\n      \"team_id\": null,\n      \"name\": \"script_1.sh\",\n      \"created_at\": \"2023-07-30T13:41:07Z\",\n      \"updated_at\": \"2023-07-30T13:41:07Z\"\n    },\n    {\n      \"id\": 2,\n      \"team_id\": null,\n      \"name\": \"script_2.sh\",\n      \"created_at\": \"2023-08-30T13:41:07Z\",\n      \"updated_at\": \"2023-08-30T13:41:07Z\"\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "List host's scripts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/scripts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"scripts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "50",
									"description": "Results per page.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "List scripts available to a specific host."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/hosts/123/scripts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"hosts",
										"123",
										"scripts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"scripts\": [\n    {\n      \"script_id\": 3,\n      \"name\": \"remove-zoom-artifacts.sh\",\n      \"last_execution\": {\n        \"execution_id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\",\n        \"executed_at\": \"2021-12-15T15:23:57Z\",\n        \"status\": \"error\"\n      }\n    },\n    {\n      \"script_id\": 5,\n      \"name\": \"set-timezone.sh\",\n      \"last_execution\": {\n        \"id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\",\n        \"executed_at\": \"2021-12-15T15:23:57Z\",\n        \"status\": \"pending\"\n      }\n    },\n    {\n      \"script_id\": 8,\n      \"name\": \"uninstall-zoom.sh\",\n      \"last_execution\": {\n        \"id\": \"e797d6c6-3aae-11ee-be56-0242ac120002\",\n        \"executed_at\": \"2021-12-15T15:23:57Z\",\n        \"status\": \"ran\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get or download script",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/scripts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"scripts",
								":id"
							],
							"query": [
								{
									"key": "alt",
									"value": "media",
									"description": "If specified and set to 'media', downloads the script's contents.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Get script details or download script contents."
					},
					"response": [
						{
							"name": "Success (get script)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/123",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"id\": 123,\n  \"team_id\": null,\n  \"name\": \"script_1.sh\",\n  \"created_at\": \"2023-07-30T13:41:07Z\",\n  \"updated_at\": \"2023-07-30T13:41:07Z\"\n}"
						},
						{
							"name": "Success (download script)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/scripts/123?alt=media",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"scripts",
										"123"
									],
									"query": [
										{
											"key": "alt",
											"value": "media"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": "echo \"hello\""
						}
					]
				}
			],
			"description": "Endpoints for managing scripts.\n\n[https://fleetdm.com/docs/rest-api/rest-api#scripts](https://fleetdm.com/docs/rest-api/rest-api#scripts)"
		},
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Get session info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"sessions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns the session information for the session specified by ID."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/sessions/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"sessions",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"session_id\": 1,\n  \"user_id\": 1,\n  \"created_at\": \"2021-03-02T18:41:34Z\"\n}"
						}
					]
				},
				{
					"name": "Delete session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/sessions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"sessions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Deletes the session specified by ID. When the user associated with the session next attempts to access Fleet, they will be asked to log in."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/sessions/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"sessions",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Endpoints for managing sessions.\n\n[https://fleetdm.com/docs/rest-api/rest-api#sessions](https://fleetdm.com/docs/rest-api/rest-api#sessions)"
		},
		{
			"name": "Software",
			"item": [
				{
					"name": "List software",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								},
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "vulnerable",
									"value": null,
									"disabled": true
								},
								{
									"key": "available_for_install",
									"value": null,
									"disabled": true
								},
								{
									"key": "self_service",
									"value": null,
									"disabled": true
								},
								{
									"key": "packages_only",
									"value": null,
									"disabled": true
								},
								{
									"key": "min_cvss_score",
									"value": null,
									"disabled": true
								},
								{
									"key": "max_cvss_score",
									"value": null,
									"disabled": true
								},
								{
									"key": "exploit",
									"value": null,
									"disabled": true
								},
								{
									"key": "platform",
									"value": null,
									"disabled": true
								},
								{
									"key": "exclude_fleet_maintained_apps",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Get a list of all software. Experimental feature. Many query parameters available, see documentation."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"counts_updated_at\": \"2022-01-01 12:32:00\",\n  \"count\": 3,\n  \"software_titles\": [ ... ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "List software versions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"versions"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								},
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "vulnerable",
									"value": null,
									"disabled": true
								},
								{
									"key": "min_cvss_score",
									"value": null,
									"disabled": true
								},
								{
									"key": "max_cvss_score",
									"value": null,
									"disabled": true
								},
								{
									"key": "exploit",
									"value": null,
									"disabled": true
								},
								{
									"key": "without_vulnerability_details",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Get a list of all software versions."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/versions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"counts_updated_at\": \"2022-01-01 12:32:00\",\n  \"count\": 2,\n  \"software\": [ ... ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "List operating systems",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/os_versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"os_versions"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "platform",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_name",
									"value": null,
									"disabled": true
								},
								{
									"key": "os_version",
									"value": null,
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Returns a list of all operating systems."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/os_versions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"os_versions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"count\": 1,\n  \"counts_updated_at\": \"2023-12-06T22:17:30Z\",\n  \"os_versions\": [ ... ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get software",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":id"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns information about the specified software. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles/12",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										"12"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_title\": {\n    \"id\": 12,\n    \"name\": \"Falcon.app\",\n    \"bundle_identifier\": \"crowdstrike.falcon.Agent\",\n    \"available_software\": { ... },\n    \"software_package\": { ... },\n    \"app_store_app\": null,\n    \"counts_updated_at\": \"2024-11-03T22:39:36Z\",\n    \"source\": \"apps\",\n    \"browser\": \"\",\n    \"hosts_count\": 48,\n    \"versions\": [ ... ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get software version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/versions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"versions",
								":id"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns information about the specified software version."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/versions/12",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"versions",
										"12"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software\": {\n    \"id\": 425224,\n    \"software_title_id\": 1337,\n    \"name\": \"Firefox.app\",\n    \"version\": \"117.0\",\n    \"bundle_identifier\": \"org.mozilla.firefox\",\n    \"source\": \"apps\",\n    \"browser\": \"\",\n    \"generated_cpe\": \"cpe:2.3:a:mozilla:firefox:117.0:*:*:*:*:macos:*:*\",\n    \"vulnerabilities\": [ ... ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get operating system version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/os_versions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"os_versions",
								":id"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Retrieves information about the specified operating system (OS) version."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/os_versions/123",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"os_versions",
										"123"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"counts_updated_at\": \"2023-12-06T22:17:30Z\",\n  \"os_version\": {\n    \"id\": 123,\n    \"hosts_count\": 21,\n    \"name\": \"Microsoft Windows 11 Pro 23H2 10.0.22621.1234\",\n    \"name_only\": \"Microsoft Windows 11 Pro 23H2\",\n    \"version\": \"10.0.22621.1234\",\n    \"platform\": \"windows\",\n    \"generated_cpes\": [],\n    \"vulnerabilities\": [ ... ]\n  }\n}"
						}
					]
				},
				{
					"name": "Add package",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "software",
									"type": "file",
									"src": []
								},
								{
									"key": "team_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "install_script",
									"value": "sudo installer -pkg /temp/FalconSensor-6.44.pkg -target /",
									"type": "text"
								},
								{
									"key": "uninstall_script",
									"value": "",
									"type": "text"
								},
								{
									"key": "pre_install_query",
									"value": "SELECT 1 FROM macos_profiles WHERE uuid='c9f4f0d5-8426-4eb8-b61b-27c543c9d3db';",
									"type": "text"
								},
								{
									"key": "post_install_script",
									"value": "sudo /Applications/Falcon.app/Contents/Resources/falconctl license 0123456789ABCDEFGHIJKLMNOPQRSTUV-WX",
									"type": "text"
								},
								{
									"key": "self_service",
									"value": "true",
									"type": "text"
								},
								{
									"key": "labels_include_any",
									"value": "",
									"type": "text"
								},
								{
									"key": "labels_exclude_any",
									"value": "",
									"type": "text"
								},
								{
									"key": "automatic_install",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/package",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"package"
							]
						},
						"description": "Add a package (.pkg, .msi, .exe, .deb, .rpm, .tar.gz) to install on macOS, Windows, or Linux hosts. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "software",
											"type": "file",
											"src": []
										},
										{
											"key": "team_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "self_service",
											"value": "true",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/package",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"package"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_package\": {\n    \"title_id\": 123,\n    \"name\": \"FalconSensor-6.44.pkg\",\n    \"version\": \"6.44\",\n    \"platform\": \"darwin\",\n    \"fleet_maintained_app_id\": 42,\n    \"installer_id\": 23,\n    \"team_id\": 3,\n    \"uploaded_at\": \"2024-04-01T14:22:58Z\",\n    \"sha256\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"install_script\": \"sudo installer -pkg /temp/FalconSensor-6.44.pkg -target /\",\n    \"pre_install_query\": \"SELECT 1 FROM macos_profiles WHERE uuid='c9f4f0d5-8426-4eb8-b61b-27c543c9d3db';\",\n    \"post_install_script\": \"sudo /Applications/Falcon.app/Contents/Resources/falconctl license 0123456789ABCDEFGHIJKLMNOPQRSTUV-WX\",\n    \"self_service\": true,\n    \"url\": \"\",\n    \"automatic_install_policies\": null,\n    \"labels_include_any\": null,\n    \"labels_exclude_any\": null,\n    \"status\": {\n      \"installed\": 0,\n      \"pending\": 0,\n      \"failed\": 0\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "Modify package",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "software",
									"type": "file",
									"src": []
								},
								{
									"key": "team_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "categories",
									"value": "",
									"type": "text"
								},
								{
									"key": "install_script",
									"value": "sudo installer -pkg /temp/FalconSensor-6.44.pkg -target /",
									"type": "text"
								},
								{
									"key": "pre_install_query",
									"value": "SELECT 1 FROM macos_profiles WHERE uuid='c9f4f0d5-8426-4eb8-b61b-27c543c9d3db';",
									"type": "text"
								},
								{
									"key": "post_install_script",
									"value": "sudo /Applications/Falcon.app/Contents/Resources/falconctl license 0123456789ABCDEFGHIJKLMNOPQRSTUV-WX",
									"type": "text"
								},
								{
									"key": "self_service",
									"value": "true",
									"type": "text"
								},
								{
									"key": "labels_include_any",
									"value": "",
									"type": "text"
								},
								{
									"key": "labels_exclude_any",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:id/package",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":id",
								"package"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Update a package to install on macOS, Windows, or Linux (Ubuntu) hosts. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "team_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "self_service",
											"value": "true",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles/1/package",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										"1",
										"package"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_package\": {\n    \"name\": \"FalconSensor-6.44.pkg\",\n    \"categories\": [],\n    \"version\": \"6.44\",\n    \"platform\": \"darwin\",\n    \"fleet_maintained_app_id\": 42,\n    \"installer_id\": 23,\n    \"team_id\": 3,\n    \"uploaded_at\": \"2024-04-01T14:22:58Z\",\n    \"sha256\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"install_script\": \"sudo installer -pkg /temp/FalconSensor-6.44.pkg -target /\",\n    \"pre_install_query\": \"SELECT 1 FROM macos_profiles WHERE uuid='c9f4f0d5-8426-4eb8-b61b-27c543c9d3db';\",\n    \"post_install_script\": \"sudo /Applications/Falcon.app/Contents/Resources/falconctl license 0123456789ABCDEFGHIJKLMNOPQRSTUV-WX\",\n    \"self_service\": true,\n    \"status\": {\n      \"installed\": 0,\n      \"pending\": 0,\n      \"failed\": 0\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List App Store apps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/app_store_apps?team_id=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"app_store_apps"
							],
							"query": [
								{
									"key": "team_id",
									"value": "",
									"description": "Required. The team ID."
								}
							]
						},
						"description": "Returns the list of Apple App Store (VPP) that can be added to the specified team. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/app_store_apps?team_id=3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"app_store_apps"
									],
									"query": [
										{
											"key": "team_id",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"app_store_apps\": [\n    {\n      \"name\": \"Xcode\",\n      \"icon_url\": \"https://is1-ssl.mzstatic.com/image/thumb/Purple211/v4/f1/65/1e/a4844ccd-486d-455f-bb31-67336fe46b14/AppIcon-1x_U007emarketing-0-7-0-85-220-0.png/512x512bb.jpg\",\n      \"latest_version\": \"15.4\",\n      \"app_store_id\": \"497799835\",\n      \"platform\": \"darwin\"\n    },\n    {\n      \"name\": \"Logic Pro\",\n      \"icon_url\": \"https://is1-ssl.mzstatic.com/image/thumb/Purple211/v4/f1/65/1e/a4844ccd-486d-455f-bb31-67336fe46b14/AppIcon-1x_U007emarketing-0-7-0-85-220-0.png/512x512bb.jpg\",\n      \"latest_version\": \"2.04\",\n      \"app_store_id\": \"634148309\",\n      \"platform\": \"ios\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add App Store app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ensure",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "labels_include_any",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "labels_exclude_any",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/app_store_apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"app_store_apps"
							]
						},
						"description": "Add App Store (VPP) app purchased in Apple Business Manager. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"app_store_id\": \"497799835\",\n  \"team_id\": 2,\n  \"platform\": \"ipados\",\n  \"self_service\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/app_store_apps",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"app_store_apps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_title_id\": 123\n}"
						}
					]
				},
				{
					"name": "Modify App Store app",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"team_id\": 2,\n  \"self_service\": true,\n  \"categories\": [\"Browser\"],\n  \"labels_include_any\": [\n    \"Product\",\n    \"Marketing\"\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:title_id/app_store_app",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":title_id",
								"app_store_app"
							],
							"variable": [
								{
									"key": "title_id",
									"value": ""
								}
							]
						},
						"description": "Modify App Store (VPP) app's options. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"team_id\": 2,\n  \"self_service\": true,\n  \"categories\": [\"Browser\"]\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles/3467/app_store_app",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										"3467",
										"app_store_app"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"app_store_app\": {\n    \"name\": \"Logic Pro\",\n    \"app_store_id\": 1091189122,\n    \"categories\": [\"Browser\"],\n    \"latest_version\": \"2.04\",\n    \"icon_url\": \"https://is1-ssl.mzstatic.com/image/thumb/Purple211/v4/f1/65/1e/a4844ccd-486d-455f-bb31-67336fe46b14/AppIcon-1x_U007emarketing-0-7-0-85-220-0.png/512x512bb.jpg\",\n    \"self_service\": true,\n    \"labels_include_any\": [ ... ],\n    \"automatic_install_policies\": [ ... ],\n    \"status\": {\n      \"installed\": 3,\n      \"pending\": 1,\n      \"failed\": 2\n    }\n  }\n}"
						}
					]
				},
				{
					"name": "List Fleet-maintained apps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/fleet_maintained_apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"fleet_maintained_apps"
							],
							"query": [
								{
									"key": "team_id",
									"value": "3",
									"description": "If specified, each app includes the software_title_id if the software has already been added to that team.",
									"disabled": true
								},
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "List available Fleet-maintained apps. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/fleet_maintained_apps?team_id=3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"fleet_maintained_apps"
									],
									"query": [
										{
											"key": "team_id",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fleet_maintained_apps\": [\n    {\n      \"id\": 1,\n      \"name\": \"1Password\",\n      \"slug\": \"1password/darwin\",\n      \"platform\": \"darwin\",\n      \"version\": \"8.10.40\",\n      \"software_title_id\": 1\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Adobe Acrobat Reader\",\n      \"slug\": \"adobe-acrobat-reader/darwin\",\n      \"platform\": \"darwin\",\n      \"version\": \"24.002.21005\",\n      \"software_title_id\": null\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get Fleet-maintained app",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/fleet_maintained_apps/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"fleet_maintained_apps",
								":id"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Returns information about the specified Fleet-maintained app. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/fleet_maintained_apps/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"fleet_maintained_apps",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"fleet_maintained_app\": {\n    \"id\": 1,\n    \"slug\": \"1password/darwin\",\n    \"name\": \"1Password\",\n    \"filename\": \"1Password-8.10.50-aarch64.zip\",\n    \"version\": \"8.10.50\",\n    \"platform\": \"darwin\",\n    \"url\": \"https://downloads.1password.com/mac/1Password-8.10.50-aarch64.zip\",\n    \"install_script\": \"#!/bin/sh\\ninstaller -pkg \\\"$INSTALLER_PATH\\\" -target /\",\n    \"uninstall_script\": \"#!/bin/sh\\npkg_ids=$PACKAGE_ID\\nfor pkg_id in '${pkg_ids[@]}'...\",\n    \"software_title_id\": 3,\n    \"categories\": [\"Productivity\"]\n  }\n}"
						}
					]
				},
				{
					"name": "Add Fleet-maintained app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fleet_maintained_app_id\": 3,\n  \"team_id\": 2,\n  \"install_script\": \"\",\n  \"pre_install_query\": \"\",\n  \"post_install_script\": \"\",\n  \"self_service\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/fleet_maintained_apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"fleet_maintained_apps"
							]
						},
						"description": "Add Fleet-maintained app so it's available for install. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fleet_maintained_app_id\": 3,\n  \"team_id\": 2,\n  \"ensure\": \"present\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/fleet_maintained_apps",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"fleet_maintained_apps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"software_title_id\": 234\n}"
						}
					]
				},
				{
					"name": "Download software",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:id/package",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":id",
								"package"
							],
							"query": [
								{
									"key": "alt",
									"value": "media",
									"description": "Required. If specified and set to 'media', downloads the specified software package.",
									"disabled": true
								},
								{
									"key": "team_id",
									"value": "2",
									"description": "Required. The team ID. Downloads a software package added to the specified team.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "Download software package. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles/123/package?alt=media&team_id=2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										"123",
										"package"
									],
									"query": [
										{
											"key": "alt",
											"value": "media"
										},
										{
											"key": "team_id",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "http",
							"header": [],
							"cookie": [],
							"body": "Status: 200\nContent-Type: application/octet-stream\nContent-Disposition: attachment\nContent-Length: <length>\nBody: <blob>"
						}
					]
				},
				{
					"name": "Install software",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/software/:software_title_id/install",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"software",
								":software_title_id",
								"install"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "software_title_id",
									"value": ""
								}
							]
						},
						"description": "Install software (package or App Store app) on a macOS, iOS, iPadOS, Windows, or Linux (Ubuntu) host. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/hosts/123/software/3435/install",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"hosts",
										"123",
										"software",
										"3435",
										"install"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"install_uuid\": \"e797d6c6-3aae-11ee-be56-0242ac120002\"\n}"
						}
					]
				},
				{
					"name": "Uninstall software",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/hosts/:id/software/:software_title_id/uninstall",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"hosts",
								":id",
								"software",
								":software_title_id",
								"uninstall"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								},
								{
									"key": "software_title_id",
									"value": ""
								}
							]
						},
						"description": "Uninstall software (package or App Store app) from a macOS, iOS, iPadOS, Windows, or Linux (Ubuntu) host. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/hosts/123/software/3435/uninstall",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"hosts",
										"123",
										"software",
										"3435",
										"uninstall"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"install_uuid\": \"e797d6c6-3aae-11ee-be56-0242ac120002\"\n}"
						}
					]
				},
				{
					"name": "Get software install result",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/install/:install_uuid/results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"install",
								":install_uuid",
								"results"
							],
							"variable": [
								{
									"key": "install_uuid",
									"value": ""
								}
							]
						},
						"description": "Get the result of a software install or uninstall operation. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/hosts/123/software/3435/install/e797d6c6-3aae-11ee-be56-0242ac120002",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"hosts",
										"123",
										"software",
										"3435",
										"install",
										"e797d6c6-3aae-11ee-be56-0242ac120002"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"install_uuid\": \"e797d6c6-3aae-11ee-be56-0242ac120002\",\n  \"status\": \"installed\",\n  \"output\": \"Software installed successfully\"\n}"
						}
					]
				},
				{
					"name": "Download package",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:software_title_id/package?team_id=1&alt=media",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":software_title_id",
								"package"
							],
							"query": [
								{
									"key": "team_id",
									"value": "1"
								},
								{
									"key": "alt",
									"value": "media"
								}
							],
							"variable": [
								{
									"key": "software_title_id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:software_title_id/package?team_id=1&alt=media",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										":software_title_id",
										"package"
									],
									"query": [
										{
											"key": "team_id",
											"value": "1"
										},
										{
											"key": "alt",
											"value": "media"
										}
									],
									"variable": [
										{
											"key": "software_title_id",
											"value": ""
										}
									]
								}
							},
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/xml",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "Status: 200\nContent-Type: application/octet-stream\nContent-Disposition: attachment\nContent-Length: \n<length>\nBody: \n    <blob>"
						}
					]
				},
				{
					"name": "Delete software",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/software/titles/:software_title_id/available_for_install?team_id=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"software",
								"titles",
								":software_title_id",
								"available_for_install"
							],
							"query": [
								{
									"key": "team_id",
									"value": "2",
									"description": "Required. The team ID. Deletes a software package added to the specified team."
								}
							],
							"variable": [
								{
									"key": "software_title_id",
									"value": ""
								}
							]
						},
						"description": "Deletes software that's available for install. This won't uninstall the software from hosts. Available in Fleet Premium. Experimental feature."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/v1/fleet/software/titles/24/available_for_install?team_id=2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"software",
										"titles",
										"24",
										"available_for_install"
									],
									"query": [
										{
											"key": "team_id",
											"value": "2",
											"description": "Required. The team ID. Deletes a software package added to the specified team."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Endpoints for managing software.\n\n[https://fleetdm.com/docs/rest-api/rest-api#software](https://fleetdm.com/docs/rest-api/rest-api#software)"
		},
		{
			"name": "Vulnerabilities",
			"item": [
				{
					"name": "List vulnerabilities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/vulnerabilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"vulnerabilities"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "{{per_page}}",
									"description": "Results per page",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								},
								{
									"key": "exploit",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/vulnerabilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"vulnerabilities"
									],
									"query": [
										{
											"key": "software_id",
											"value": "{{software_id}}",
											"description": "Filter by software ID",
											"disabled": true
										},
										{
											"key": "cve",
											"value": "{{cve}}",
											"description": "Filter by CVE identifier",
											"disabled": true
										},
										{
											"key": "page",
											"value": "{{page}}",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "{{per_page}}",
											"description": "Results per page",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"vulnerabilities\": [\n    {\n      \"cve\": \"CVE-2023-1234\",\n      \"software_id\": 123,\n      \"description\": \"Example vulnerability description.\",\n      \"cvss_score\": 7.5,\n      \"epss_probability\": 0.015,\n      \"cisa_known_exploit\": false,\n      \"published\": \"2023-01-01T00:00:00Z\"\n    }\n  ],\n  \"meta\": {\n    \"has_next_results\": false,\n    \"has_previous_results\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get vulnerability details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/vulnerabilities/:cve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"vulnerabilities",
								":cve"
							],
							"query": [
								{
									"key": "team_id",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cve",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/vulnerabilities/{{cve}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"vulnerabilities",
										"{{cve}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"cve\": \"CVE-2023-1234\",\n  \"description\": \"Example vulnerability description.\",\n  \"cvss_score\": 7.5,\n  \"epss_probability\": 0.015,\n  \"cisa_known_exploit\": false,\n  \"published\": \"2023-01-01T00:00:00Z\",\n  \"affected_software\": [\n    {\n      \"software_id\": 123,\n      \"name\": \"ExampleApp\",\n      \"version\": \"1.2.3\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Endpoints for retrieving and managing software vulnerabilities in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#vulnerabilities](https://fleetdm.com/docs/rest-api/rest-api#vulnerabilities)"
		},
		{
			"name": "Targets",
			"item": [
				{
					"name": "Search targets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": \"\",\n  \"query_id\": 123,\n  \"selected\": {\n    \"hosts\": [1, 2],\n    \"labels\": [3],\n    \"teams\": [4]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/targets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"targets"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query\": \"172\",\n  \"selected\": {\n    \"hosts\": [],\n    \"labels\": [7]\n  },\n  \"include_observer\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/targets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"targets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"targets\": {\n    \"hosts\": [\n      { \"id\": 1, \"hostname\": \"host1.example.com\" },\n      { \"id\": 2, \"hostname\": \"host2.example.com\" }\n    ],\n    \"labels\": [\n      { \"id\": 3, \"name\": \"All Macs\" }\n    ],\n    \"teams\": [\n      { \"id\": 4, \"name\": \"IT Team\" }\n    ]\n  },\n  \"total\": 3\n}"
						}
					]
				}
			],
			"description": "Endpoints for resolving and previewing targets (hosts, labels, teams) for queries and actions in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#targets](https://fleetdm.com/docs/rest-api/rest-api#targets)"
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "List teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams"
							],
							"query": [
								{
									"key": "page",
									"value": null,
									"disabled": true
								},
								{
									"key": "per_page",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_key",
									"value": null,
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": null,
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get team",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Engineering\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Engineering Updated\",\n  \"host_ids\": [],\n  \"user_ids\": [],\n  \"webhook_settings\": {\n    \"failing_policies_webhook\":{\n      \"enable_failing_policies_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"policy_ids\": [1, 2, 3],\n      \"host_batch_size\": 1000\n    },\n    \"host_status_webhook\": {\n      \"enable_host_status_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"host_percentage\": 5,\n      \"days_count\": 7\n    }\n  },\n  \"integrations\": {\n    \"conditional_access_enabled\": true,\n    \"jira\": [\n      {\n        \"enable_software_vulnerabilities\": false,\n        \"enable_failing_poilicies\": true,\n        \"url\": \"https://jiraserver.com\",\n        \"username\": \"some_user\",\n        \"api_token\": \"<TOKEN>\",\n        \"project_key\": \"jira_project\"\n      }\n    ],\n    \"zendesk\": [],\n    \"google_calendar\": [\n      {\n        \"domain\": \"https://domain.com\",\n        \"api_key_json\": \"<API KEY JSON>\"\n      }\n    ]\n  },\n  \"mdm\": {\n    \"macos_updates\": {\n      \"minimum_version\": \"12.3.1\",\n      \"deadline\": \"2025-04-01\"\n    },\n    \"ios_updates\": {\n      \"minimum_version\": \"18.3.1\",\n      \"deadline\": \"2025-04-01\"\n    },\n    \"windows_updates\": {\n      \"deadline_days\": 5,\n      \"grace_period_days\": 1\n    },\n    \"macos_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile1.mobileconfig\",\n          \"labels\": [\"Label 1\", \"Label 2\"]\n        },\n        {\n          \"path\": \"path/to/profile2.json\",\n          \"labels\": [\"Label 3\", \"Label 4\"]\n        }\n      ]\n    },\n    \"windows_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile3.xml\",\n          \"labels\": [\"Label 1\", \"Label 2\"]\n        }\n      ]\n    },\n    \"macos_setup\": {\n      \"enable_end_user_authentication\": false\n    }\n  },\n  \"host_expiry_settings\": {\n    \"host_expiry_enabled\": true,\n    \"host_expiry_window\": 7\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Modify team",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Engineering Updated\",\n  \"host_ids\": [],\n  \"user_ids\": [],\n  \"webhook_settings\": {\n    \"failing_policies_webhook\":{\n      \"enable_failing_policies_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"policy_ids\": [1, 2, 3],\n      \"host_batch_size\": 1000\n    },\n    \"host_status_webhook\": {\n      \"enable_host_status_webhook\": true,\n      \"destination_url\": \"https://server.com\",\n      \"host_percentage\": 5,\n      \"days_count\": 7\n    }\n  },\n  \"integrations\": {\n    \"conditional_access_enabled\": true,\n    \"jira\": [\n      {\n        \"enable_software_vulnerabilities\": false,\n        \"enable_failing_poilicies\": true,\n        \"url\": \"https://jiraserver.com\",\n        \"username\": \"some_user\",\n        \"api_token\": \"<TOKEN>\",\n        \"project_key\": \"jira_project\"\n      }\n    ],\n    \"zendesk\": [],\n    \"google_calendar\": [\n      {\n        \"domain\": \"https://domain.com\",\n        \"api_key_json\": \"<API KEY JSON>\"\n      }\n    ]\n  },\n  \"mdm\": {\n    \"macos_updates\": {\n      \"minimum_version\": \"12.3.1\",\n      \"deadline\": \"2025-04-01\"\n    },\n    \"ios_updates\": {\n      \"minimum_version\": \"18.3.1\",\n      \"deadline\": \"2025-04-01\"\n    },\n    \"windows_updates\": {\n      \"deadline_days\": 5,\n      \"grace_period_days\": 1\n    },\n    \"macos_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile1.mobileconfig\",\n          \"labels\": [\"Label 1\", \"Label 2\"]\n        },\n        {\n          \"path\": \"path/to/profile2.json\",\n          \"labels\": [\"Label 3\", \"Label 4\"]\n        }\n      ]\n    },\n    \"windows_settings\": {\n      \"custom_settings\": [\n        {\n          \"path\": \"path/to/profile3.xml\",\n          \"labels\": [\"Label 1\", \"Label 2\"]\n        }\n      ]\n    },\n    \"macos_setup\": {\n      \"enable_end_user_authentication\": false\n    }\n  },\n  \"host_expiry_settings\": {\n    \"host_expiry_enabled\": true,\n    \"host_expiry_window\": 7\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/teams/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"teams",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Add users to team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [1, 2, 3],\n  \"id\": 1,\n  \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify team's agent options",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id/agent_options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id",
								"agent_options"
							],
							"query": [
								{
									"key": "force",
									"value": null,
									"disabled": true
								},
								{
									"key": "dry_run",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete team",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/teams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for managing teams in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#teams](https://fleetdm.com/docs/rest-api/rest-api#teams)"
		},
		{
			"name": "Translator",
			"item": [
				{
					"name": "Translate query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"list\": [\n    {\n      \"type\": \"user\",\n      \"payload\": {\n        \"identifier\": \"some@email.com\"\n      }\n    },\n    {\n      \"type\": \"label\",\n      \"payload\": {\n        \"identifier\": \"labelA\"\n      }\n    },\n    {\n      \"type\": \"team\",\n      \"payload\": {\n        \"identifier\": \"team1\"\n      }\n    },\n    {\n      \"type\": \"host\",\n      \"payload\": {\n        \"identifier\": \"host-ABC\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/translate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"translate"
							]
						}
					},
					"response": []
				}
			],
			"description": "Endpoints for translating queries and managing query translations in Fleet.\n\n[https://fleetdm.com/docs/rest-api/rest-api#translate-ids](https://fleetdm.com/docs/rest-api/rest-api#translate-ids)"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List all users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"description": "Search query keywords. Searchable fields include name and email.",
									"disabled": true
								},
								{
									"key": "order_key",
									"value": "",
									"description": "What to order results by. Can be any column in the users table.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\".",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number of the results to fetch.",
									"disabled": true
								},
								{
									"key": "per_page",
									"value": "50",
									"description": "Results per page.",
									"disabled": true
								},
								{
									"key": "team_id",
									"value": "",
									"description": "Available in Fleet Premium. Filters the users to only include users in the specified team.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users?query=&order_key=&order_direction=asc&page=1&per_page=50&team_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users"
									],
									"query": [
										{
											"key": "query",
											"value": "",
											"description": "Search query keywords. Searchable fields include name and email."
										},
										{
											"key": "order_key",
											"value": "",
											"description": "What to order results by. Can be any column in the users table."
										},
										{
											"key": "order_direction",
											"value": "asc",
											"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\"."
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number of the results to fetch."
										},
										{
											"key": "per_page",
											"value": "50",
											"description": "Results per page."
										},
										{
											"key": "team_id",
											"value": "",
											"description": "Available in Fleet Premium. Filters the users to only include users in the specified team."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"users\": [\n    {\n      \"created_at\": \"2020-12-10T03:52:53Z\",\n      \"updated_at\": \"2020-12-10T03:52:53Z\",\n      \"id\": 1,\n      \"name\": \"Jane Doe\",\n      \"email\": \"janedoe@example.com\",\n      \"force_password_reset\": false,\n      \"gravatar_url\": \"\",\n      \"sso_enabled\": false,\n      \"mfa_enabled\": false,\n      \"global_role\": null,\n      \"api_only\": false,\n      \"teams\": [\n        {\n          \"id\": 1,\n          \"created_at\": \"0001-01-01T00:00:00Z\",\n          \"name\": \"workstations\",\n          \"description\": \"\",\n          \"role\": \"admin\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Failed authentication (401)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users?query=&order_key=&order_direction=asc&page=1&per_page=50&team_id=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users"
									],
									"query": [
										{
											"key": "query",
											"value": "",
											"description": "Search query keywords. Searchable fields include name and email."
										},
										{
											"key": "order_key",
											"value": "",
											"description": "What to order results by. Can be any column in the users table."
										},
										{
											"key": "order_direction",
											"value": "asc",
											"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\"."
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number of the results to fetch."
										},
										{
											"key": "per_page",
											"value": "50",
											"description": "Results per page."
										},
										{
											"key": "team_id",
											"value": "",
											"description": "Available in Fleet Premium. Filters the users to only include users in the specified team."
										}
									]
								}
							},
							"status": "Authentication Failed",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Authentication Failed\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"Authentication failed\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a user account with an invitation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"janedoe@example.com\",\n  \"invite_token\": \"SjdReDNuZW5jd3dCbTJtQTQ5WjJTc2txWWlEcGpiM3c=\",\n  \"name\": \"janedoe\",\n  \"password\": \"test-123\",\n  \"password_confirmation\": \"test-123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"janedoe@example.com\",\n  \"invite_token\": \"SjdReDNuZW5jd3dCbTJtQTQ5WjJTc2txWWlEcGpiM3c=\",\n  \"name\": \"janedoe\",\n  \"password\": \"test-123\",\n  \"password_confirmation\": \"test-123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 2,\n    \"name\": \"janedoe\",\n    \"email\": \"janedoe@example.com\",\n    \"enabled\": true,\n    \"force_password_reset\": false,\n    \"gravatar_url\": \"\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"global_role\": \"admin\",\n    \"teams\": []\n  }\n}"
						},
						{
							"name": "Expired or used invite code (404)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"janedoe@example.com\",\n  \"invite_token\": \"SjdReDNuZW5jd3dCbTJtQTQ5WjJTc2txWWlEcGpiM3c=\",\n  \"name\": \"janedoe\",\n  \"password\": \"test-123\",\n  \"password_confirmation\": \"test-123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users"
									]
								}
							},
							"status": "Resource Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Resource Not Found\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"Invite with token SjdReDNuZW5jd3dCbTJtQTQ5WjJTc2txWWlEcGpiM3c= was not found in the datastore\"\n    }\n  ]\n}"
						},
						{
							"name": "Validation failed (422)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"janedoe@example.com\",\n  \"invite_token\": \"SjdReDNuZW5jd3dCbTJtQTQ5WjJTc2txWWlEcGpiM3c=\",\n  \"name\": \"janedoe\",\n  \"password\": \"test-123\",\n  \"password_confirmation\": \"test-123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users"
									]
								}
							},
							"status": "Validation Failed",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Validation Failed\",\n  \"errors\": [\n    {\n      \"name\": \"name\",\n      \"reason\": \"cannot be empty\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a user account without an invitation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"janedoe@example.com\",\n  \"password\": \"test-123\",\n  \"sso_enabled\": true,\n  \"mfa_enabled\": true,\n  \"api_only\": true,\n  \"global_role\": \"admin\",\n  \"admin_forced_password_reset\": true,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								"admin"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Jane Doe\",\n  \"email\": \"janedoe@example.com\",\n  \"password\": \"test-123\",\n  \"api_only\": true,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/admin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										"admin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 5,\n    \"name\": \"Jane Doe\",\n    \"email\": \"janedoe@example.com\",\n    \"enabled\": true,\n    \"force_password_reset\": false,\n    \"gravatar_url\": \"\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"api_only\": true,\n    \"global_role\": null,\n    \"teams\": [\n      {\n        \"id\": 2,\n        \"role\": \"observer\"\n      },\n      {\n        \"id\": 3,\n        \"role\": \"maintainer\"\n      }\n    ]\n  },\n  \"token\": \"{API key}\"\n}"
						}
					]
				},
				{
					"name": "Get user information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"2020-12-10T05:20:25Z\",\n    \"updated_at\": \"2020-12-10T05:24:27Z\",\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"email\": \"janedoe@example.com\",\n    \"force_password_reset\": false,\n    \"gravatar_url\": \"\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"global_role\": \"admin\",\n    \"api_only\": false,\n    \"teams\": []\n  }\n}"
						},
						{
							"name": "User doesn't exist (404)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Resource Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Resource Not Found\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"User with id=5 was not found in the datastore\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Modify user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jane Doe\",\n  \"global_role\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Jane Doe\",\n  \"global_role\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"2021-02-03T16:11:06Z\",\n    \"updated_at\": \"2021-02-03T16:11:06Z\",\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"email\": \"janedoe@example.com\",\n    \"global_role\": \"admin\",\n    \"force_password_reset\": false,\n    \"gravatar_url\": \"\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"api_only\": false,\n    \"teams\": []\n  }\n}"
						}
					]
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Require password reset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"require\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id/require_password_reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id",
								"require_password_reset"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"require\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id/require_password_reset",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id",
										"require_password_reset"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"created_at\": \"2021-02-23T22:23:34Z\",\n    \"updated_at\": \"2021-02-23T22:28:52Z\",\n    \"id\": 2,\n    \"name\": \"Jane Doe\",\n    \"email\": \"janedoe@example.com\",\n    \"force_password_reset\": true,\n    \"gravatar_url\": \"\",\n    \"mfa_enabled\": false,\n    \"sso_enabled\": false,\n    \"global_role\": \"observer\",\n    \"teams\": []\n  }\n}"
						}
					]
				},
				{
					"name": "List a user's sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id",
								"sessions"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id",
										"sessions"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"sessions\": [\n    {\n      \"session_id\": 2,\n      \"user_id\": 1,\n      \"created_at\": \"2021-02-03T16:12:50Z\"\n    },\n    {\n      \"session_id\": 3,\n      \"user_id\": 1,\n      \"created_at\": \"2021-02-09T23:40:23Z\"\n    },\n    {\n      \"session_id\": 6,\n      \"user_id\": 1,\n      \"created_at\": \"2021-02-23T22:23:58Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete a user's sessions",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/users/:id/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"users",
								":id",
								"sessions"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/users/:id/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"users",
										":id",
										"sessions"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create invite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john_appleseed@example.com\",\n  \"name\": \"John\",\n  \"sso_enabled\": false,\n  \"mfa_enabled\": false,\n  \"global_role\": null,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/invites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"invites"
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"john_appleseed@example.com\",\n  \"name\": \"John\",\n  \"sso_enabled\": false,\n  \"mfa_enabled\": false,\n  \"global_role\": null,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"invite\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 3,\n    \"invited_by\": 1,\n    \"email\": \"john_appleseed@example.com\",\n    \"name\": \"John\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"teams\": [\n      {\n        \"id\": 10,\n        \"created_at\": \"0001-01-01T00:00:00Z\",\n        \"name\": \"Apples\",\n        \"description\": \"\",\n        \"agent_options\": null,\n        \"user_count\": 0,\n        \"host_count\": 0,\n        \"role\": \"observer\"\n      },\n      {\n        \"id\": 14,\n        \"created_at\": \"0001-01-01T00:00:00Z\",\n        \"name\": \"Best of the Best Engineering\",\n        \"description\": \"\",\n        \"agent_options\": null,\n        \"user_count\": 0,\n        \"host_count\": 0,\n        \"role\": \"maintainer\"\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "List invites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/invites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"invites"
							],
							"query": [
								{
									"key": "order_key",
									"value": "",
									"description": "What to order results by. Can be any column in the invites table.",
									"disabled": true
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\".",
									"disabled": true
								},
								{
									"key": "query",
									"value": "",
									"description": "Search query keywords. Searchable fields include name and email.",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites?order_key=&order_direction=asc&query=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites"
									],
									"query": [
										{
											"key": "order_key",
											"value": "",
											"description": "What to order results by. Can be any column in the invites table."
										},
										{
											"key": "order_direction",
											"value": "asc",
											"description": "Requires order_key. The direction of the order given the order key. Options include \"asc\" and \"desc\". Default is \"asc\"."
										},
										{
											"key": "query",
											"value": "",
											"description": "Search query keywords. Searchable fields include name and email."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"invites\": [\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 3,\n      \"email\": \"john_appleseed@example.com\",\n      \"name\": \"John\",\n      \"sso_enabled\": false,\n      \"mfa_enabled\": false,\n      \"global_role\": \"admin\",\n      \"teams\": []\n    },\n    {\n      \"created_at\": \"0001-01-01T00:00:00Z\",\n      \"updated_at\": \"0001-01-01T00:00:00Z\",\n      \"id\": 4,\n      \"email\": \"bob_marks@example.com\",\n      \"name\": \"Bob\",\n      \"sso_enabled\": false,\n      \"mfa_enabled\": false,\n      \"global_role\": \"admin\",\n      \"teams\": []\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete invite",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/invites/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"invites",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify invite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/invites/:token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"invites",
								":token"
							],
							"variable": [
								{
									"key": "token"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"invite\": {\n    \"created_at\": \"2021-01-15T00:58:33Z\",\n    \"updated_at\": \"2021-01-15T00:58:33Z\",\n    \"id\": 4,\n    \"email\": \"steve@example.com\",\n    \"name\": \"Steve\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"global_role\": \"admin\",\n    \"teams\": []\n  }\n}"
						},
						{
							"name": "Not found (404)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								}
							},
							"status": "Resource Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"message\": \"Resource Not Found\",\n  \"errors\": [\n    {\n      \"name\": \"base\",\n      \"reason\": \"Invite with token <token> was not found in the datastore\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Modify invite",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john_appleseed@example.com\",\n  \"name\": \"John\",\n  \"sso_enabled\": false,\n  \"mfa_enabled\": false,\n  \"global_role\": null,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/fleet/invites/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"fleet",
								"invites",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"john_appleseed@example.com\",\n  \"name\": \"John\",\n  \"sso_enabled\": false,\n  \"mfa_enabled\": false,\n  \"global_role\": null,\n  \"teams\": [\n    {\n      \"id\": 2,\n      \"role\": \"observer\"\n    },\n    {\n      \"id\": 3,\n      \"role\": \"maintainer\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/fleet/invites/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"fleet",
										"invites",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n  \"invite\": {\n    \"created_at\": \"0001-01-01T00:00:00Z\",\n    \"updated_at\": \"0001-01-01T00:00:00Z\",\n    \"id\": 3,\n    \"invited_by\": 1,\n    \"email\": \"john_appleseed@example.com\",\n    \"name\": \"John\",\n    \"sso_enabled\": false,\n    \"mfa_enabled\": false,\n    \"teams\": [\n      {\n        \"id\": 10,\n        \"created_at\": \"0001-01-01T00:00:00Z\",\n        \"name\": \"Apples\",\n        \"description\": \"\",\n        \"agent_options\": null,\n        \"user_count\": 0,\n        \"host_count\": 0,\n        \"role\": \"observer\"\n      },\n      {\n        \"id\": 14,\n        \"created_at\": \"0001-01-01T00:00:00Z\",\n        \"name\": \"Best of the Best Engineering\",\n        \"description\": \"\",\n        \"agent_options\": null,\n        \"user_count\": 0,\n        \"host_count\": 0,\n        \"role\": \"maintainer\"\n      }\n    ]\n  }\n}"
						}
					]
				}
			],
			"description": "The Fleet server exposes API endpoints that handles common user management operations, including managing emailed invites to new users.\n\n[https://fleetdm.com/docs/rest-api/rest-api#users](https://fleetdm.com/docs/rest-api/rest-api#users)"
		},
		{
			"name": "Debug",
			"item": [
				{
					"name": "Get a summary of errors",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/errors?flush=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"errors"
							],
							"query": [
								{
									"key": "flush",
									"value": "false",
									"description": "Whether or not clear the errors from Redis after reading them. Default is false"
								}
							]
						}
					},
					"response": [
						{
							"name": "Default response (200)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/debug/errors?flush=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"debug",
										"errors"
									],
									"query": [
										{
											"key": "flush",
											"value": "false",
											"description": "Whether or not clear the errors from Redis after reading them. Default is false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n  {\n    \"count\": \"3\",\n    \"chain\": [\n      {\n        \"message\": \"Authorization header required\"\n      },\n      {\n        \"message\": \"missing FleetError in chain\",\n        \"data\": {\n          \"timestamp\": \"2022-06-03T14:16:01-03:00\"\n        },\n        \"stack\": [\n          \"github.com/fleetdm/fleet/v4/server/contexts/ctxerr.Handle (ctxerr.go:262)\",\n          \"github.com/fleetdm/fleet/v4/server/service.encodeError (transport_error.go:80)\",\n          \"github.com/go-kit/kit/transport/http.Server.ServeHTTP (server.go:124)\"\n        ]\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "Get database information - locks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/db/locks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"db",
								"locks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get database information - innodb-status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/db/innodb-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"db",
								"innodb-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get database information - process-list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/db/process-list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"db",
								"process-list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profiling information - cmdline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/pprof/cmdline",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"pprof",
								"cmdline"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profiling information - profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/pprof/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"pprof",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profiling information - symbol",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/pprof/symbol",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"pprof",
								"symbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profiling information - trace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/debug/pprof/trace",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"debug",
								"pprof",
								"trace"
							]
						}
					},
					"response": []
				}
			],
			"description": "The Fleet server exposes a handful of API endpoints to retrieve debug information about the server itself in order to help troubleshooting.\n\n[https://fleetdm.com/docs/rest-api/rest-api#debug](https://fleetdm.com/docs/rest-api/rest-api#debug)"
		}
	]
}